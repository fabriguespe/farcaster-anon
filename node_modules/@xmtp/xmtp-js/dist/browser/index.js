import{ciphertext as e,privateKey as t,signature as s,publicKey as r,fetcher as n,keystore as i,message as o,content as a,authn as c,messageApi as d,invitation as h,contact as y,privatePreferences as u,composite as p}from"@xmtp/proto";import l from"long";import*as w from"@noble/secp256k1";import{bytesToHex as f,keccak256 as m,getAddress as g,hexToSignature as v,hexToBytes as b,hashMessage as E,verifyMessage as K}from"viem";import{Mutex as A}from"async-mutex";import T from"elliptic";import k,{user_preferences_encrypt as S,user_preferences_decrypt as C,generate_private_preferences_topic as P}from"@xmtp/user-preferences-bindings-wasm/web";class B{constructor(e){if(!e.aes256GcmHkdfSha256)throw new Error("invalid ciphertext");if(e.aes256GcmHkdfSha256.payload.length<16)throw new Error(`invalid ciphertext ciphertext length: ${e.aes256GcmHkdfSha256.payload.length}`);if(32!==e.aes256GcmHkdfSha256.hkdfSalt.length)throw new Error(`invalid ciphertext salt length: ${e.aes256GcmHkdfSha256.hkdfSalt.length}`);if(12!==e.aes256GcmHkdfSha256.gcmNonce.length)throw new Error(`invalid ciphertext nonce length: ${e.aes256GcmHkdfSha256.gcmNonce.length}`);this.aes256GcmHkdfSha256=e.aes256GcmHkdfSha256}toBytes(){return e.Ciphertext.encode(this).finish()}static fromBytes(t){return new B(e.Ciphertext.decode(t))}}const I=window.crypto,R=(new Uint8Array).buffer,N=(new Uint8Array).buffer;async function D(e){return new Uint8Array(await I.subtle.digest("SHA-256",e))}async function M(e,t,s){const r=I.getRandomValues(new Uint8Array(32)),n=I.getRandomValues(new Uint8Array(12)),i=await V(t,r),o=await I.subtle.encrypt(x(n,s),i,e);return new B({aes256GcmHkdfSha256:{payload:new Uint8Array(o),hkdfSalt:r,gcmNonce:n}})}async function _(e,t,s){if(!e.aes256GcmHkdfSha256)throw new Error("invalid payload ciphertext");const r=await V(t,e.aes256GcmHkdfSha256.hkdfSalt),n=await I.subtle.decrypt(x(e.aes256GcmHkdfSha256.gcmNonce,s),r,e.aes256GcmHkdfSha256.payload);return new Uint8Array(n)}function x(e,t){const s={name:"AES-GCM",iv:e};return t&&(s.additionalData=t),s}async function V(e,t){const s=await I.subtle.importKey("raw",e,"HKDF",!1,["deriveKey"]);return I.subtle.deriveKey({name:"HKDF",hash:"SHA-256",salt:t,info:R},s,{name:"AES-GCM",length:256},!1,["encrypt","decrypt"])}async function U(e,t){const s=await I.subtle.importKey("raw",e,"HKDF",!1,["deriveKey"]);return I.subtle.deriveKey({name:"HKDF",hash:"SHA-256",salt:N,info:t},s,{name:"HMAC",hash:"SHA-256",length:256},!0,["sign","verify"])}async function q(e,t,s){const r=await U(e,t),n=await I.subtle.sign("HMAC",r,s);return new Uint8Array(n)}async function O(e,t,s){return await I.subtle.verify("HMAC",e,t,s)}async function L(e){const t=await I.subtle.exportKey("raw",e);return new Uint8Array(t)}async function H(e){return I.subtle.importKey("raw",e,{name:"HMAC",hash:"SHA-256",length:256},!0,["sign","verify"])}const F=w.utils.bytesToHex;function G(e,t){if(e.length!==t.length)return!1;for(let s=0;s<e.length;s++)if(e[s]!==t[s])return!1;return!0}function $(e){const t=v(e),s=b(t.r),r=b(t.s);let n=Number(t.v);0!==n&&1!==n||(n+=27);const i=1-n%2,o=new Uint8Array(64);return o.set(s),o.set(r,s.length),{bytes:o,recovery:i}}function j(e){if(32!==e.bytes.length)throw new Error(`invalid private key length: ${e.bytes.length}`)}class X{constructor(e){if(!e.secp256k1)throw new Error("invalid private key");if(j(e.secp256k1),this.secp256k1=e.secp256k1,this.createdNs=e.createdNs,!e.publicKey)throw new Error("missing public key");this.publicKey=new re(e.publicKey)}static async generate(e){const t={bytes:w.utils.randomPrivateKey()},s=l.fromNumber((new Date).getTime()).mul(1e6),r=new se({secp256k1Uncompressed:{bytes:w.getPublicKey(t.bytes)},createdNs:s}),n=await e.signKey(r);return new X({secp256k1:t,createdNs:s,publicKey:n})}generated(){return new Date(this.createdNs.div(1e6).toNumber())}async sign(e){const[t,s]=await w.sign(e,this.secp256k1.bytes,{recovered:!0,der:!1});return new Q({ecdsaCompact:{bytes:t,recovery:s}})}async signKey(e){const t=e.toBytes(),s=await D(t),r=await this.sign(s);return new re({keyBytes:t,signature:r})}static async signerKey(e,t){return W(await D(e.bytesToSign()),t)}sharedSecret(e){return w.getSharedSecret(this.secp256k1.bytes,e.secp256k1Uncompressed.bytes,!1)}encrypt(e,t,s){return M(e,this.sharedSecret(t),s)}decrypt(e,t,s){return _(e,this.sharedSecret(t),s)}matches(e){return this.publicKey.equals(e)}equals(e){return G(this.secp256k1.bytes,e.secp256k1.bytes)&&this.publicKey.equals(e.publicKey)}toBytes(){return t.SignedPrivateKey.encode(this).finish()}validatePublicKey(){return G(w.getPublicKey(this.secp256k1.bytes),this.publicKey.secp256k1Uncompressed.bytes)}static fromBytes(e){return new X(t.SignedPrivateKey.decode(e))}static fromLegacyKey(e,t){return new X({createdNs:e.timestamp.mul(1e6),secp256k1:e.secp256k1,publicKey:re.fromLegacyKey(e.publicKey,t)})}}class J{constructor(e){if(!e.secp256k1)throw new Error("invalid private key");if(j(e.secp256k1),this.timestamp=e.timestamp,this.secp256k1=e.secp256k1,!e.publicKey)throw new Error("missing public key");this.publicKey=new ne(e.publicKey)}static generate(){const e={bytes:w.utils.randomPrivateKey()},t=l.fromNumber((new Date).getTime());return new J({secp256k1:e,timestamp:t,publicKey:new ne({secp256k1Uncompressed:{bytes:w.getPublicKey(e.bytes)},timestamp:t})})}generated(){return new Date(this.timestamp.toNumber())}async sign(e){const[t,s]=await w.sign(e,this.secp256k1.bytes,{recovered:!0,der:!1});return new Q({ecdsaCompact:{bytes:t,recovery:s}})}async signKey(e){const t=await D(e.bytesToSign());return e.signature=await this.sign(t),e}sharedSecret(e){return w.getSharedSecret(this.secp256k1.bytes,e.secp256k1Uncompressed.bytes,!1)}encrypt(e,t,s){return M(e,this.sharedSecret(t),s)}decrypt(e,t,s){return _(e,this.sharedSecret(t),s)}matches(e){return this.publicKey.equals(e)}validatePublicKey(){return G(w.getPublicKey(this.secp256k1.bytes),this.publicKey.secp256k1Uncompressed.bytes)}toBytes(){return t.PrivateKey.encode(this).finish()}static fromBytes(e){return new J(t.PrivateKey.decode(e))}}function z(e){if(64!==e.bytes.length)throw new Error(`invalid signature length: ${e.bytes.length}`);if(0!==e.recovery&&1!==e.recovery)throw new Error(`invalid recovery bit: ${e.recovery}`)}function Y(e,t){return e.recovery===t.recovery&&G(e.bytes,t.bytes)}function W(e,t){const s=w.recoverPublicKey(e,t.bytes,t.recovery);return s?new se({secp256k1Uncompressed:{bytes:s},createdNs:l.fromNumber(0)}):void 0}class Q{constructor(e){if(e.ecdsaCompact)z(e.ecdsaCompact),this.ecdsaCompact=e.ecdsaCompact;else{if(!e.walletEcdsaCompact)throw new Error("invalid signature");z(e.walletEcdsaCompact),this.walletEcdsaCompact=e.walletEcdsaCompact}}async signerKey(e){return this.ecdsaCompact?X.signerKey(e,this.ecdsaCompact):this.walletEcdsaCompact?ee.signerKey(e,this.walletEcdsaCompact):void 0}getPublicKey(e){let t;if(this.ecdsaCompact)t=w.recoverPublicKey(e,this.ecdsaCompact.bytes,this.ecdsaCompact.recovery);else{if(!this.walletEcdsaCompact)throw new Error("invalid v1 signature");t=w.recoverPublicKey(e,this.walletEcdsaCompact.bytes,this.walletEcdsaCompact.recovery)}return t?new ne({secp256k1Uncompressed:{bytes:t},timestamp:l.fromNumber(0)}):void 0}equals(e){return this.ecdsaCompact&&e.ecdsaCompact?Y(this.ecdsaCompact,e.ecdsaCompact):!(!this.walletEcdsaCompact||!e.walletEcdsaCompact)&&Y(this.walletEcdsaCompact,e.walletEcdsaCompact)}toBytes(){return s.Signature.encode(this).finish()}static fromBytes(e){return new Q(s.Signature.decode(e))}}var Z;!function(e){e[e.INBOX_KEY=0]="INBOX_KEY",e[e.SEND_KEY=1]="SEND_KEY"}(Z||(Z={}));class ee{constructor(e){this.wallet=e}static identitySigRequestText(e){return`XMTP : Create Identity\n${F(e)}\n\nFor more info: https://xmtp.org/signatures/`}static signerKey(e,t){return W(b(E(this.identitySigRequestText(e.bytesToSign()))),t)}async signKey(e){const t=e.toBytes(),s=await this.wallet.signMessage(ee.identitySigRequestText(t)),{bytes:r,recovery:n}=$(s),i=new Q({walletEcdsaCompact:{bytes:r,recovery:n}});return new re({keyBytes:t,signature:i})}}const te=new l(10**9).mul(10**9);class se{constructor(e){if(!e?.secp256k1Uncompressed)throw new Error("invalid public key");!function(e){if(65!==e.bytes.length)throw new Error(`invalid public key length: ${e.bytes.length}`);if(4!==e.bytes[0])throw new Error(`unrecognized public key prefix: ${e.bytes[0]}`)}(e.secp256k1Uncompressed),this.secp256k1Uncompressed=e.secp256k1Uncompressed,this.createdNs=e.createdNs.toUnsigned()}generated(){return new Date(this.timestamp.toNumber())}isFromLegacyKey(){return this.createdNs.lessThan(te)}get timestamp(){return(this.isFromLegacyKey()?this.createdNs:this.createdNs.div(1e6)).toUnsigned()}verify(e,t){return!!e.ecdsaCompact&&w.verify(e.ecdsaCompact.bytes,t,this.secp256k1Uncompressed.bytes)}async verifyKey(e){if(!e.signature)return!1;const t=await D(e.bytesToSign());return this.verify(e.signature,t)}equals(e){return G(this.secp256k1Uncompressed.bytes,e.secp256k1Uncompressed.bytes)}getEthereumAddress(){return function(e){const t=f(e.slice(1)),s=m(t),r=s.substring(s.length-40);return g(`0x${r}`)}(this.secp256k1Uncompressed.bytes)}toBytes(){return r.UnsignedPublicKey.encode(this).finish()}static fromBytes(e){return new se(r.UnsignedPublicKey.decode(e))}}class re extends se{constructor(e){if(!e.keyBytes)throw new Error("missing key bytes");if(super(r.UnsignedPublicKey.decode(e.keyBytes)),this.keyBytes=e.keyBytes,!e.signature)throw new Error("missing key signature");this.signature=new Q(e.signature)}get unsignedKey(){return new se({createdNs:this.createdNs,secp256k1Uncompressed:this.secp256k1Uncompressed})}signerKey(){return this.signature.signerKey(this)}async walletSignatureAddress(){if(!this.signature.walletEcdsaCompact)throw new Error("key was not signed by a wallet");const e=await this.signerKey();if(!e)throw new Error("key signature not valid");return e.getEthereumAddress()}equals(e){return this.unsignedKey.equals(e.unsignedKey)&&this.signature.equals(e.signature)}bytesToSign(){return this.keyBytes}toBytes(){return r.SignedPublicKey.encode(this).finish()}static fromBytes(e){return new re(r.SignedPublicKey.decode(e))}toLegacyKey(){if(!this.isFromLegacyKey())throw new Error("cannot be converted to legacy key");let e=this.signature;return e.walletEcdsaCompact&&(e=new Q({ecdsaCompact:e.walletEcdsaCompact})),new ne({timestamp:this.timestamp,secp256k1Uncompressed:this.secp256k1Uncompressed,signature:e})}static fromLegacyKey(e,t){if(!e.signature)throw new Error("key is not signed");let s=e.signature;return t&&(s=new Q({walletEcdsaCompact:s.ecdsaCompact})),new re({keyBytes:e.bytesToSign(),signature:s})}}class ne extends se{constructor(e){super({createdNs:e.timestamp.mul(1e6),secp256k1Uncompressed:e.secp256k1Uncompressed}),e.signature&&(!e.signature.ecdsaCompact&&e.signature.walletEcdsaCompact?this.signature=new Q({ecdsaCompact:{bytes:e.signature.walletEcdsaCompact.bytes,recovery:e.signature.walletEcdsaCompact.recovery}}):this.signature=new Q(e.signature))}get timestamp(){return this.createdNs.div(1e6)}bytesToSign(){return r.PublicKey.encode({timestamp:this.timestamp,secp256k1Uncompressed:this.secp256k1Uncompressed}).finish()}async signWithWallet(e){const t=await e.signMessage(ee.identitySigRequestText(this.bytesToSign())),{bytes:s,recovery:r}=$(t);this.signature=new Q({ecdsaCompact:{bytes:s,recovery:r}})}walletSignatureAddress(){if(!this.signature)throw new Error("key is not signed");const e=b(E(ee.identitySigRequestText(this.bytesToSign()))),t=this.signature.getPublicKey(e);if(!t)throw new Error("key signature is malformed");return t.getEthereumAddress()}toBytes(){return r.PublicKey.encode(this).finish()}static fromBytes(e){return new ne(r.PublicKey.decode(e))}}class ie{constructor(e){if(!e.identityKey)throw new Error("missing identity key");if(!e.preKey)throw new Error("missing pre-key");this.identityKey=new re(e.identityKey),this.preKey=new re(e.preKey)}walletSignatureAddress(){return this.identityKey.walletSignatureAddress()}equals(e){return this.identityKey.equals(e.identityKey)&&this.preKey.equals(e.preKey)}toBytes(){return r.SignedPublicKeyBundle.encode(this).finish()}isFromLegacyBundle(){return this.identityKey.isFromLegacyKey()&&this.preKey.isFromLegacyKey()}toLegacyBundle(){return new oe({identityKey:this.identityKey.toLegacyKey(),preKey:this.preKey.toLegacyKey()})}static fromBytes(e){const t=r.SignedPublicKeyBundle.decode(e);return new ie(t)}static fromLegacyBundle(e){return new ie({identityKey:re.fromLegacyKey(e.identityKey,!0),preKey:re.fromLegacyKey(e.preKey)})}}class oe{constructor(e){if(!e.identityKey)throw new Error("missing identity key");if(!e.preKey)throw new Error("missing pre-key");this.identityKey=new ne(e.identityKey),this.preKey=new ne(e.preKey)}equals(e){return this.identityKey.equals(e.identityKey)&&this.preKey.equals(e.preKey)}walletSignatureAddress(){return this.identityKey.walletSignatureAddress()}toBytes(){return r.PublicKeyBundle.encode(this).finish()}static fromBytes(e){const t=r.PublicKeyBundle.decode(e);return new oe(t)}}class ae{constructor(e){this.authorityId=e.authorityId,this.typeId=e.typeId,this.versionMajor=e.versionMajor,this.versionMinor=e.versionMinor}toString(){return`${this.authorityId}/${this.typeId}:${this.versionMajor}.${this.versionMinor}`}static fromString(e){const[t,s]=e.split(":"),[r,n]=t.split("/"),[i,o]=s.split(".");return new ae({authorityId:r,typeId:n,versionMajor:Number(i),versionMinor:Number(o)})}sameAs(e){return this.authorityId===e.authorityId&&this.typeId===e.typeId}}const ce=new ae({authorityId:"xmtp.org",typeId:"fallback",versionMajor:1,versionMinor:0}),de=new ae({authorityId:"xmtp.org",typeId:"text",versionMajor:1,versionMinor:0});var he;!function(e){e.utf8="UTF-8"}(he||(he={}));class ye{get contentType(){return de}encode(e){return{type:de,parameters:{encoding:he.utf8},content:(new TextEncoder).encode(e)}}decode(e){const t=e.parameters.encoding;if(t&&t!==he.utf8)throw new Error(`unrecognized encoding ${t}`);return(new TextDecoder).decode(e.content)}fallback(e){}shouldPush(){return!0}}class ue{constructor(e,t){this.messageEnvelope=e,this.onSend=t}async messageID(){if(!this.messageEnvelope.message)throw new Error("no envelope message");return F(await D(this.messageEnvelope.message))}async send(){return this.onSend()}}class pe{constructor(e,t,s,r,n){this.messages=[],this.resolvers=[],this.topics=t,this.client=e,this.callback=this.newMessageCallback(s,r),this.onConnectionLost=n}newMessageCallback(e,t){return async s=>{if(s.message)try{const r=await e(s);if(!r)return;if(t){const e=t(r);e&&this.resubscribeToTopics(e)}const n=this.resolvers.pop();n?n({value:r}):this.messages.unshift(r)}catch(e){console.warn(e)}}}async start(){if(!this.callback)throw new Error("Missing callback for stream");this.subscriptionManager=this.client.apiClient.subscribe({contentTopics:this.topics},(async e=>{this.callback&&await(this?.callback(e))}),this.onConnectionLost)}static async create(e,t,s,r,n){const i=new pe(e,t,s,r,n);return await i.start(),i}[Symbol.asyncIterator](){return this}async return(){return this.subscriptionManager&&await this.subscriptionManager.unsubscribe(),this.callback?(this.callback=void 0,this.resolvers.forEach((e=>e({value:void 0,done:!0}))),{value:void 0,done:!0}):{value:void 0,done:!0}}next(){const e=this.messages.pop();return e?Promise.resolve({value:e}):this.callback?new Promise((e=>this.resolvers.unshift(e))):Promise.resolve({value:void 0,done:!0})}async resubscribeToTopics(e){if(!this.callback||!this.subscriptionManager)throw new Error("Missing callback for stream");if("function"==typeof this.subscriptionManager?.updateContentTopics)return this.subscriptionManager.updateContentTopics(e);await this.subscriptionManager.unsubscribe(),this.topics=e,this.subscriptionManager=this.client.apiClient.subscribe({contentTopics:this.topics},(async e=>{this.callback&&await(this?.callback(e))}),this.onConnectionLost)}}const{b64Decode:le,b64Encode:we}=n;function fe(e,t){const s=new Uint8Array(e.length+t.length);return s.set(e),s.set(t,e.length),s}function me(e){return l.fromNumber(e.valueOf()).multiply(1e6)}function ge(e){return new Date(e.divide(1e6).toNumber())}const ve=e=>e&&me(e).toString(),be=e=>{if(e)return ge(l.fromString(e))};class Ee extends Error{constructor(e,t){super(t),this.code=e}}const Ke=e=>{if(e.error)throw new Ee(e.error.code,e.error.message);if(!e.result)throw new Ee(i.ErrorCode.ERROR_CODE_UNSPECIFIED,"No result from Keystore");if("encrypted"in e.result&&!e.result.encrypted)throw new Error("Missing ciphertext");if("decrypted"in e.result&&!e.result.decrypted)throw new Error("Missing decrypted result");return e.result},Ae=(e,t)=>({requests:e.map((e=>{const s=new oe({identityKey:e.header.sender?.identityKey,preKey:e.header.sender?.preKey}),r=t.equals(s);return{payload:e.ciphertext,peerKeys:r?new oe({identityKey:e.header.recipient?.identityKey,preKey:e.header.recipient?.preKey}):s,headerBytes:e.headerBytes,isSender:r}}))}),Te=e=>`/xmtp/0/${e}/proto`,ke=(e,t)=>{const s=[g(e),g(t)];return s.sort(),Te(`dm-${s.join("-")}`)},Se=e=>Te(`m-${e}`),Ce=e=>Te(`contact-${g(e)}`),Pe=e=>Te(`intro-${g(e)}`),Be=e=>Te(`invite-${g(e)}`),Ie=e=>Te(`privatestore-${e}`),Re=e=>Te(`userpreferences-${e}`),Ne=e=>{const t=/^[\x21-\x7F]+$/,s=e.indexOf("0/");if(-1!==s){const r=e.substring(s+2,e.lastIndexOf("/proto"));return t.test(r)}return!1};class De{constructor(e,t,s){this.conversationVersion="v1",this.context=void 0,this.peerAddress=g(t),this.client=e,this.createdAt=s}get clientAddress(){return this.client.address}async allow(){await this.client.contacts.allow([this.peerAddress])}async deny(){await this.client.contacts.deny([this.peerAddress])}get isAllowed(){return this.client.contacts.isAllowed(this.peerAddress)}get isDenied(){return this.client.contacts.isDenied(this.peerAddress)}get consentState(){return this.client.contacts.consentState(this.peerAddress)}get topic(){return ke(this.peerAddress,this.client.address)}get ephemeralTopic(){return ke(this.peerAddress,this.client.address).replace("/xmtp/0/dm-","/xmtp/0/dmE-")}async messages(e){const t=ke(this.peerAddress,this.client.address),s=await this.client.listEnvelopes(t,this.processEnvelope.bind(this),e);return this.decryptBatch(s,t,!1)}messagesPaginated(e){return this.client.listEnvelopesPaginated(this.topic,this.decodeMessage.bind(this),e)}async decodeMessage(e){if(!e.contentTopic)throw new Error("Missing content topic");const t=await this.processEnvelope(e),s=await this.decryptBatch([t],e.contentTopic,!0);if(!s.length)throw new Error("No results");return s[0]}async prepareMessage(e,t){let s,r=await this.client.getUserContact(this.peerAddress);if(!r)throw new Error(`recipient ${this.peerAddress} is not registered`);r instanceof oe||(r=r.toLegacyBundle());const n=t?.ephemeral?this.ephemeralTopic:this.topic;this.client.contacts.addresses.has(this.peerAddress)?s=[n]:(s=[Pe(this.peerAddress),Pe(this.client.address),n],this.client.contacts.addresses.add(this.peerAddress));const{payload:i}=await this.client.encodeContent(e,t),o=await this.createMessage(i,r,t?.timestamp),a=o.toBytes(),c={contentTopic:n,message:a,timestampNs:ve(o.sent)};return new ue(c,(async()=>(await this.client.publishEnvelopes(s.map((e=>({contentTopic:e,message:a,timestamp:o.sent})))),qe.fromV1Message(o,e,t?.contentType||de,i,n,this))))}streamMessages(e){return pe.create(this.client,[this.topic],(async e=>this.decodeMessage(e)),void 0,e)}async processEnvelope({message:e,contentTopic:t}){if(!e||!e.length)throw new Error("empty envelope");const s=await Ve.fromBytes(e),{senderAddress:r,recipientAddress:n}=s;if(!r||!n||!t||ke(r,n)!==this.topic)throw new Error("Headers do not match intended recipient");return s}streamEphemeral(e){return pe.create(this.client,[this.ephemeralTopic],this.decodeMessage.bind(this),void 0,e)}async send(e,t){let s,r=await this.client.getUserContact(this.peerAddress);if(!r)throw new Error(`recipient ${this.peerAddress} is not registered`);r instanceof oe||(r=r.toLegacyBundle());const n=t?.ephemeral?this.ephemeralTopic:this.topic;this.client.contacts.addresses.has(this.peerAddress)?s=[n]:(s=[Pe(this.peerAddress),Pe(this.client.address),n],this.client.contacts.addresses.add(this.peerAddress));const i=t?.contentType||de,{payload:o}=await this.client.encodeContent(e,t),a=await this.createMessage(o,r,t?.timestamp);return await this.client.publishEnvelopes(s.map((e=>({contentTopic:e,message:a.toBytes(),timestamp:a.sent})))),"unknown"===this.consentState&&await this.allow(),qe.fromV1Message(a,e,i,o,n,this)}async decryptBatch(e,t,s=!1){const r=(await this.client.keystore.decryptV1(Ae(e,this.client.publicKeyBundle))).responses,n=[];for(let i=0;i<r.length;i++){const o=r[i],a=e[i];try{const{decrypted:e}=Ke(o);n.push(await this.buildDecodedMessage(a,e,t))}catch(e){if(s)throw e;console.warn("Error decoding content",e)}}return n}async buildDecodedMessage(e,t,s){const{content:r,contentType:n,error:i,contentFallback:o}=await this.client.decodeContent(t);return qe.fromV1Message(e,r,n,t,s,this,i,o)}async createMessage(e,t,s){return s=s||new Date,Ve.encode(this.client.keystore,e,this.client.publicKeyBundle,t,s)}}class Me{constructor(e,t,s,r,n){this.conversationVersion="v2",this.topic=t,this.createdAt=r,this.context=n,this.client=e,this.peerAddress=s}get clientAddress(){return this.client.address}async allow(){await this.client.contacts.allow([this.peerAddress])}async deny(){await this.client.contacts.deny([this.peerAddress])}get isAllowed(){return this.client.contacts.isAllowed(this.peerAddress)}get isDenied(){return this.client.contacts.isDenied(this.peerAddress)}get consentState(){return this.client.contacts.consentState(this.peerAddress)}async messages(e){const t=await this.client.listEnvelopes(this.topic,this.processEnvelope.bind(this),e);return this.decryptBatch(t,!1)}messagesPaginated(e){return this.client.listEnvelopesPaginated(this.topic,this.decodeMessage.bind(this),e)}get ephemeralTopic(){return this.topic.replace("/xmtp/0/m","/xmtp/0/mE")}streamEphemeral(e){return pe.create(this.client,[this.ephemeralTopic],this.decodeMessage.bind(this),void 0,e)}streamMessages(e){return pe.create(this.client,[this.topic],this.decodeMessage.bind(this),void 0,e)}async send(e,t){const{payload:s,shouldPush:r}=await this.client.encodeContent(e,t),n=await this.createMessage(s,r,t?.timestamp),i=t?.ephemeral?this.ephemeralTopic:this.topic;await this.client.publishEnvelopes([{contentTopic:i,message:n.toBytes(),timestamp:n.sent}]);const o=t?.contentType||de;return"unknown"===this.consentState&&await this.allow(),qe.fromV2Message(n,e,o,i,s,this,this.client.address)}async createMessage(e,t,s){const r={topic:this.topic,createdNs:me(s||new Date)},n=o.MessageHeaderV2.encode(r).finish(),i=await D(fe(n,e)),c={payload:e,sender:this.client.signedPublicKeyBundle,signature:await this.client.keystore.signDigest({digest:i,prekeyIndex:0,identityKey:void 0})},d=a.SignedContent.encode(c).finish(),{encrypted:h,senderHmac:y}=await this.encryptMessage(d,n),u={v1:void 0,v2:{headerBytes:n,ciphertext:h,senderHmac:y,shouldPush:t}},p=o.Message.encode(u).finish();return Ue.create(u,r,p,y,t)}async decryptBatch(e,t=!1){const s=(await this.client.keystore.decryptV2(this.buildDecryptRequest(e))).responses,r=[];for(let n=0;n<s.length;n++){const i=s[n],o=e[n];try{const{decrypted:e}=Ke(i);r.push(await this.buildDecodedMessage(o,e))}catch(e){if(t)throw e;console.warn("Error decoding content",e)}}return r}buildDecryptRequest(e){return{requests:e.map((e=>({payload:e.ciphertext,headerBytes:e.headerBytes,contentTopic:this.topic})))}}async encryptMessage(e,t){const{responses:s}=await this.client.keystore.encryptV2({requests:[{payload:e,headerBytes:t,contentTopic:this.topic}]});if(1!==s.length)throw new Error("Invalid response length");const{encrypted:r,senderHmac:n}=Ke(s[0]);return{encrypted:r,senderHmac:n}}async buildDecodedMessage(e,t){const s=a.SignedContent.decode(t);if(!s.sender?.identityKey||!s.sender?.preKey||!s.signature)throw new Error("incomplete signed content");await async function(e){const t=e.sender?.preKey;if(!t||!t.signature||!t.keyBytes)throw new Error("missing pre-key or pre-key signature");const s=e.sender?.identityKey;if(!s)throw new Error("missing identity key in bundle");if(!await new re(s).verifyKey(new re(t)))throw new Error("pre key not signed by identity key")}(s);const r=await D(fe(e.headerBytes,s.payload));if(!new re(s.sender?.preKey).verify(new Q(s.signature),r))throw new Error("invalid signature");const n=await new ie(s.sender).walletSignatureAddress(),{content:i,contentType:o,error:c,contentFallback:d}=await this.client.decodeContent(s.payload);return qe.fromV2Message(e,i,o,this.topic,s.payload,this,n,c,d)}async prepareMessage(e,t){const{payload:s,shouldPush:r}=await this.client.encodeContent(e,t),n=await this.createMessage(s,r,t?.timestamp),i=n.toBytes(),o=t?.ephemeral?this.ephemeralTopic:this.topic,a={contentTopic:o,message:i,timestampNs:ve(n.sent)};return new ue(a,(async()=>(await this.client.publishEnvelopes([{contentTopic:o,message:i,timestamp:n.sent}]),qe.fromV2Message(n,e,t?.contentType||de,o,s,this,this.client.address))))}async processEnvelope(e){if(!e.message||!e.contentTopic)throw new Error("empty envelope");const t=o.Message.decode(e.message);if(!t.v2)throw new Error("unknown message version");const s=o.MessageHeaderV2.decode(t.v2.headerBytes);if(s.topic!==this.topic)throw new Error("topic mismatch");return Ue.create(t,s,e.message,t.v2.senderHmac,t.v2.shouldPush)}async decodeMessage(e){if(!e.contentTopic)throw new Error("Missing content topic");const t=await this.processEnvelope(e),s=await this.decryptBatch([t],!0);if(!s.length)throw new Error("No results");return s[0]}}const _e=e=>{if(e.v1?.ciphertext)return[e.v1.headerBytes,new B(e.v1.ciphertext)];if(e.v2?.ciphertext)return[e.v2.headerBytes,new B(e.v2.ciphertext)];throw new Error("unknown message version")};class xe{constructor(e,t,s){[this.headerBytes,this.ciphertext]=_e(s),this.id=e,this.bytes=t}toBytes(){return this.bytes}}class Ve extends xe{constructor(e,t,s,r,n){super(e,t,s),this.conversation=void 0,this.senderAddress=n,this.header=r}static async create(e,t,s){if(!t.sender)throw new Error("missing message sender");const r=new oe(t.sender).walletSignatureAddress(),n=F(await D(s));return new Ve(n,s,e,t,r)}get sent(){return new Date(this.header.timestamp.toNumber())}get recipientAddress(){if(this.header?.recipient?.identityKey)return new ne(this.header.recipient.identityKey).walletSignatureAddress()}async decrypt(e,t){const s=(await e.decryptV1(Ae([this],t))).responses;if(!s.length)throw new Error("No response from Keystore");const{decrypted:r}=Ke(s[0]);return r}static fromBytes(e){const t=o.Message.decode(e),[s]=_e(t),r=o.MessageHeaderV1.decode(s);if(!r)throw new Error("missing message header");if(!r.sender)throw new Error("missing message sender");if(!r.sender.identityKey)throw new Error("missing message sender identity key");if(!r.sender.preKey)throw new Error("missing message sender pre-key");if(!r.recipient)throw new Error("missing message recipient");if(!r.recipient.identityKey)throw new Error("missing message recipient identity-key");if(!r.recipient.preKey)throw new Error("missing message recipient pre-key");return Ve.create(t,r,e)}static async encode(e,t,s,r,n){const i={sender:s,recipient:r,timestamp:l.fromNumber(n.getTime())},a=o.MessageHeaderV1.encode(i).finish(),c=await e.encryptV1({requests:[{recipient:r,headerBytes:a,payload:t}]});if(!c.responses.length)throw new Error("No response from Keystore");const{encrypted:d}=Ke(c.responses[0]),h={v1:{headerBytes:a,ciphertext:d},v2:void 0},y=o.Message.encode(h).finish();return Ve.create(h,i,y)}}class Ue extends xe{constructor(e,t,s,r,n,i){super(e,t,s),this.header=r,this.senderHmac=n,this.shouldPush=i}static async create(e,t,s,r,n){const i=F(await D(s));return new Ue(i,s,e,t,r,n)}get sent(){return ge(this.header.createdNs)}}class qe{constructor({id:e,messageVersion:t,senderAddress:s,recipientAddress:r,conversation:n,contentBytes:i,contentType:o,contentTopic:a,content:c,sent:d,error:h,contentFallback:y}){this.id=e,this.messageVersion=t,this.senderAddress=s,this.recipientAddress=r,this.conversation=n,this.contentType=o,this.sent=d,this.error=h,this.content=c,this.contentTopic=a,this.contentBytes=i,this.contentFallback=y}toBytes(){return o.DecodedMessage.encode({...this,conversation:{topic:this.conversation.topic,context:this.conversation.context??void 0,createdNs:me(this.conversation.createdAt),peerAddress:this.conversation.peerAddress},sentNs:me(this.sent)}).finish()}static async fromBytes(e,t){const s=o.DecodedMessage.decode(e),r=s.messageVersion;if("v1"!==r&&"v2"!==r)throw new Error("Invalid message version");if(!s.conversation)throw new Error("No conversation reference found");const{content:n,contentType:i,error:a,contentFallback:c}=await t.decodeContent(s.contentBytes);return new qe({...s,content:n,contentType:i,error:a,messageVersion:r,sent:ge(s.sentNs),conversation:Oe(s.conversation,t,r),contentFallback:c})}static fromV1Message(e,t,s,r,n,i,o,a){const{id:c,senderAddress:d,recipientAddress:h,sent:y}=e;if(!d)throw new Error("Sender address is required");return new qe({id:c,messageVersion:"v1",senderAddress:d,recipientAddress:h,sent:y,content:t,contentBytes:r,contentType:s,contentTopic:n,conversation:i,error:o,contentFallback:a})}static fromV2Message(e,t,s,r,n,i,o,a,c){const{id:d,sent:h}=e;return new qe({id:d,messageVersion:"v2",senderAddress:o,sent:h,content:t,contentBytes:n,contentType:s,contentTopic:r,conversation:i,error:a,contentFallback:c})}}function Oe(e,t,s){if("v1"===s)return new De(t,e.peerAddress,ge(e.createdNs));if("v2"===s)return new Me(t,e.topic,e.peerAddress,ge(e.createdNs),e.context);throw new Error(`Unknown conversation version ${s}`)}function Le(e,t){return t.decodeContent(e)}class He extends Error{constructor(e){super(`no pre-key matches: ${F(e.secp256k1Uncompressed.bytes)}`)}}class Fe{constructor(e){if(this.version=2,!e.identityKey)throw new Error("missing identity key");this.identityKey=new X(e.identityKey),this.preKeys=(e.preKeys||[]).map((e=>new X(e)))}static async generate(e){const t=await X.generate(new ee(e)),s=new Fe({identityKey:t,preKeys:[]});return await s.addPreKey(),s}getCurrentPreKey(){return this.preKeys[0]}findPreKey(e){const t=this.preKeys.find((t=>t.matches(e)));if(!t)throw new He(e);return t}async addPreKey(){this._publicKeyBundle=void 0;const e=await X.generate(this.identityKey);this.preKeys.unshift(e)}getPublicKeyBundle(){return this._publicKeyBundle||(this._publicKeyBundle=new ie({identityKey:this.identityKey.publicKey,preKey:this.getCurrentPreKey().publicKey})),this._publicKeyBundle}async sharedSecret(e,t,s){if(!e.identityKey||!e.preKey)throw new Error("invalid peer key bundle");if(!await e.identityKey.verifyKey(e.preKey))throw new Error("peer preKey signature invalid");if(!this.identityKey)throw new Error("missing identity key");let r,n,i;s?(i=this.findPreKey(t),r=i.sharedSecret(e.identityKey),n=this.identityKey.sharedSecret(e.preKey)):(i=this.findPreKey(t),r=this.identityKey.sharedSecret(e.preKey),n=i.sharedSecret(e.identityKey));const o=i.sharedSecret(e.preKey),a=new Uint8Array(r.length+n.length+o.length);return a.set(r,0),a.set(n,r.length),a.set(o,r.length+n.length),a}encode(){return t.PrivateKeyBundle.encode({v1:void 0,v2:this}).finish()}validatePublicKeys(){return!!this.identityKey.validatePublicKey()&&this.preKeys.every((e=>e.validatePublicKey()))}equals(e){if(this.preKeys.length!==e.preKeys.length)return!1;for(let t=0;t<this.preKeys.length;t++)if(!this.preKeys[t].equals(e.preKeys[t]))return!1;return this.identityKey.equals(e.identityKey)}static fromLegacyBundle(e){return new Fe({identityKey:X.fromLegacyKey(e.identityKey,!0),preKeys:e.preKeys.map((e=>X.fromLegacyKey(e)))})}}class Ge{constructor(e){if(this.version=1,!e.identityKey)throw new Error("missing identity key");this.identityKey=new J(e.identityKey),this.preKeys=(e.preKeys||[]).map((e=>new J(e)))}static async generate(e){const t=J.generate();e&&await t.publicKey.signWithWallet(e);const s=new Ge({identityKey:t,preKeys:[]});return await s.addPreKey(),s}getCurrentPreKey(){return this.preKeys[0]}findPreKey(e){const t=this.preKeys.find((t=>t.matches(e)));if(!t)throw new He(e);return t}async addPreKey(){this._publicKeyBundle=void 0;const e=J.generate();await this.identityKey.signKey(e.publicKey),this.preKeys.unshift(e)}getPublicKeyBundle(){return this._publicKeyBundle||(this._publicKeyBundle=new oe({identityKey:this.identityKey.publicKey,preKey:this.getCurrentPreKey().publicKey})),this._publicKeyBundle}validatePublicKeys(){return!!this.identityKey.validatePublicKey()&&this.preKeys.every((e=>e.validatePublicKey()))}async sharedSecret(e,t,s){if(!e.identityKey||!e.preKey)throw new Error("invalid peer key bundle");if(!await e.identityKey.verifyKey(e.preKey))throw new Error("peer preKey signature invalid");if(!this.identityKey)throw new Error("missing identity key");let r,n,i;s?(i=this.findPreKey(t),r=i.sharedSecret(e.identityKey),n=this.identityKey.sharedSecret(e.preKey)):(i=this.findPreKey(t),r=this.identityKey.sharedSecret(e.preKey),n=i.sharedSecret(e.identityKey));const o=i.sharedSecret(e.preKey),a=new Uint8Array(r.length+n.length+o.length);return a.set(r,0),a.set(n,r.length),a.set(o,r.length+n.length),a}encode(){return t.PrivateKeyBundle.encode({v1:this,v2:void 0}).finish()}}function $e(e){const s=t.PrivateKeyBundle.decode(e);if(s.v1)return new Ge(s.v1);if(s.v2)return new Fe(s.v2);throw new Error("unknown private key bundle version")}class je{constructor({walletAddr:e,createdNs:t}){this.walletAddr=e,this.createdNs=t}static create(e,t){return t=t||new Date,new je({walletAddr:e,createdNs:me(t)})}static fromBytes(e){const t=c.AuthData.decode(e);return new je(t)}toBytes(){return c.AuthData.encode(this).finish()}}class Xe{constructor({identityKey:e,authDataBytes:t,authDataSignature:s}){if(!e)throw new Error("Missing identity key in token");if(!s)throw new Error("Missing authDataSignature in token");this.identityKey=e,this.authDataBytes=t,this.authDataSignature=s}get authData(){return this._authData||(this._authData=je.fromBytes(this.authDataBytes)),this._authData}get ageMs(){return(new Date).valueOf()-this.authData.createdNs.div(1e6).toNumber()}toBytes(){return c.Token.encode(this).finish()}static fromBytes(e){return new Xe(c.Token.decode(e))}toBase64(){return Buffer.from(this.toBytes()).toString("base64")}}class Je{constructor(e){this.keystore=e}async createToken(e){return(e=>e instanceof Xe?e:new Xe(e))(await this.keystore.createAuthToken({timestampNs:e?me(e):void 0}))}}const ze=e=>new Promise((t=>setTimeout(t,e))),Ye=e=>!!e;async function We(e,t,s,r,n=Ye,i=1){const o="number"==typeof i?i:1;try{return await e(...t)}catch(i){if(!n(i)||o>s)throw i;return await ze(r),We(e,t,s,r,n,o+1)}}async function*Qe(e,t){for await(const s of e){const e=await Promise.allSettled(s.map(t)),r=[];for(const t of e)"fulfilled"===t.status?r.push(t.value):console.warn("Failed to process envelope due to reason: ",t.reason);yield r}}class Ze{constructor(e,t=3590){this.authenticator=e,this.maxAgeMs=1e3*t}async getToken(){return(!this.token||this.token.ageMs>this.maxAgeMs)&&await this.refresh(),this.token.toBase64()}async refresh(){this.token=await this.authenticator.createToken()}}const{MessageApi:et,SortDirection:tt}=d,st={local:"http://localhost:5555",dev:"https://dev.xmtp.network",production:"https://production.xmtp.network"};var rt;!function(e){e[e.OK=0]="OK",e[e.CANCELLED=1]="CANCELLED",e[e.UNKNOWN=2]="UNKNOWN",e[e.INVALID_ARGUMENT=3]="INVALID_ARGUMENT",e[e.DEADLINE_EXCEEDED=4]="DEADLINE_EXCEEDED",e[e.NOT_FOUND=5]="NOT_FOUND",e[e.ALREADY_EXISTS=6]="ALREADY_EXISTS",e[e.PERMISSION_DENIED=7]="PERMISSION_DENIED",e[e.RESOURCE_EXHAUSTED=8]="RESOURCE_EXHAUSTED",e[e.FAILED_PRECONDITION=9]="FAILED_PRECONDITION",e[e.ABORTED=10]="ABORTED",e[e.OUT_OF_RANGE=11]="OUT_OF_RANGE",e[e.UNIMPLEMENTED=12]="UNIMPLEMENTED",e[e.INTERNAL=13]="INTERNAL",e[e.UNAVAILABLE=14]="UNAVAILABLE",e[e.DATA_LOSS=15]="DATA_LOSS",e[e.UNAUTHENTICATED=16]="UNAUTHENTICATED"}(rt||(rt={}));class nt extends Error{constructor(e,t){super(e),this.code=t}static fromObject(e){return new nt(e.message,e.code)}}const it=e=>!!e&&!("AbortError"!==e.name&&!e.message.includes("aborted")),ot=e=>!(e=>!(!e||!("code"in e)||16!==e.code))(e),at=e=>e.message&&e.message.length?("string"==typeof e.message&&(e.message=le(e.message)),e):e;class ct{constructor(e,t){this.pathPrefix=e,this.maxRetries=t?.maxRetries||5,this.appVersion=t?.appVersion,this.version="xmtp-js/11.5.1",e===st.dev&&console.info("\nXX    XX MM    MM TTTTTT PPPPPP   DDDDD   EEEEEEE VV     VV \n XX  XX  MMM  MMM   TT   PP   PP  DD  DD  EE      VV     VV \n  XXXX   MM MM MM   TT   PPPPPP   DD   DD EEEEE    VV   VV  \n XX  XX  MM    MM   TT   PP       DD   DD EE        VV VV   \nXX    XX MM    MM   TT   PP       DDDDDD  EEEEEEE    VVV    \n\nConnected to the XMTP 'dev' network. Use 'production' for production messages.\nhttps://github.com/xmtp/xmtp-js#xmtp-production-and-dev-network-environments\n")}async _query(e){try{return await We(et.Query,[e,{pathPrefix:this.pathPrefix,mode:"cors",headers:this.headers()}],this.maxRetries,100)}catch(e){throw nt.fromObject(e)}}_batchQuery(e){return We(et.BatchQuery,[e,{pathPrefix:this.pathPrefix,mode:"cors",headers:this.headers()}],this.maxRetries,100)}async _publish(e,t=0){const s=await this.getToken(),r=this.headers();r.set("Authorization",`Bearer ${s}`);try{return await We(et.Publish,[e,{pathPrefix:this.pathPrefix,mode:"cors",headers:r}],this.maxRetries,100,ot)}catch(s){if(ot(s)||t>=1)throw nt.fromObject(s);return await(this.authCache?.refresh()),this._publish(e,t+1)}}_subscribe(e,t,s){const r=new AbortController;return(async()=>{for(;;){const n=(new Date).getTime();try{if(await et.Subscribe(e,t,{pathPrefix:this.pathPrefix,signal:r.signal,mode:"cors",headers:this.headers()}),r.signal.aborted)return;console.info("Stream connection closed. Resubscribing"),(new Date).getTime()-n<1e3&&await ze(1e3),s?.()}catch(e){if(it(e)||r.signal.aborted)return;console.info("Stream connection closed. Resubscribing"),(new Date).getTime()-n<1e3&&await ze(1e3),s?.()}}})(),{unsubscribe:async()=>{r?.abort()}}}async query(e,{direction:t=tt.SORT_DIRECTION_ASCENDING,limit:s}){const r=[];for await(const n of this.queryIteratePages(e,{direction:t,pageSize:s&&s<100?s:100}))for(const e of n)if(r.push(e),s&&r.length===s)return r;return r}async*queryIterator(e,t){for await(const s of this.queryIteratePages(e,t))for(const e of s)yield e}async*queryIteratePages({contentTopic:e,startTime:t,endTime:s},{direction:r,pageSize:n=10}){if(!e||!e.length)throw new Error("Must specify content topics");const i=ve(t),o=ve(s);let a;for(;;){const t={limit:n,direction:r,cursor:a},s=await this._query({contentTopics:[e],startTimeNs:i,endTimeNs:o,pagingInfo:t});if(!s.envelopes?.length)return;if(yield s.envelopes.map(at),!s.pagingInfo?.cursor)return;a=s.pagingInfo?.cursor}}async batchQuery(e){const t=[];for(let s=0;s<e.length;s+=50){const r=e.slice(s,s+50),n=[];for(const e of r)n.push({contentTopics:[e.contentTopic],startTimeNs:ve(e.startTime),endTimeNs:ve(e.endTime),pagingInfo:{limit:e.pageSize||10,direction:e.direction||tt.SORT_DIRECTION_ASCENDING}});const i={requests:n};t.push(i)}const s=await Promise.all(t.map((async e=>this._batchQuery(e)))),r=[];for(const e of s){if(!e.responses)throw new Error("BatchQueryResponse missing responses");for(const t of e.responses)t.envelopes?r.push(t.envelopes.map(at)):r.push([])}return r}async publish(e){const t=[];for(const{contentTopic:s,message:r,timestamp:n}of e){if(!s.length)throw new Error("Content topic cannot be empty string");if(!r.length)throw new Error("0 length messages not allowed");const e=n||new Date;t.push({contentTopic:s,timestampNs:ve(e),message:Uint8Array.from(r)})}return this._publish({envelopes:t})}subscribe(e,t,s){if(!e.contentTopics.length)throw new Error("Must provide list of contentTopics to subscribe to");return this._subscribe(e,(e=>t(at(e))),s)}getToken(){if(!this.authCache)throw new Error("AuthCache is not set on API Client");return this.authCache.getToken()}setAuthenticator(e,t){this.authCache=new Ze(e,t)}headers(){const e=new Headers;return e.set("X-Client-Version",this.version),this.appVersion&&e.set("X-App-Version",this.appVersion),e}}class dt{constructor(e,t){this.disableOffset=!1,this.jobType=e,this.mutex=new A,this.keystore=t}get protoJobType(){return function(e){const t={v1:i.JobType.JOB_TYPE_REFRESH_V1,v2:i.JobType.JOB_TYPE_REFRESH_V2,"user-preferences":i.JobType.JOB_TYPE_REFRESH_PPPP}[e];if(!t)throw new Error(`unknown job type: ${e}`);return t}(this.jobType)}async run(e){return this.mutex.runExclusive((async()=>{const t=await this.getLastRunTime(),s=new Date,r=await e(t?this.disableOffset?t:new Date(t.getTime()-1e4):void 0);return await this.setLastRunTime(s),r}))}async resetLastRunTime(){await this.keystore.setRefreshJob({jobType:this.protoJobType,lastRunNs:me(new Date(0))})}async getLastRunTime(){const{lastRunNs:e}=await this.keystore.getRefreshJob(i.GetRefreshJobRequest.fromPartial({jobType:this.protoJobType}));if(!e.equals(l.fromNumber(0)))return ge(e)}async setLastRunTime(e){await this.keystore.setRefreshJob({jobType:this.protoJobType,lastRunNs:me(e)})}}const ht=e=>Boolean(e.recipientAddress&&e.senderAddress);class yt{constructor(e){this.client=e,this.v1JobRunner=new dt("v1",e.keystore),this.v2JobRunner=new dt("v2",e.keystore)}async list(){const[e,t]=await Promise.all([this.listV1Conversations(),this.listV2Conversations()]),s=e.concat(t);return s.sort(((e,t)=>e.createdAt.getTime()-t.createdAt.getTime())),s}async listFromCache(){const[e,t]=await Promise.all([this.getV1ConversationsFromKeystore(),this.getV2ConversationsFromKeystore()]),s=e.concat(t);return s.sort(((e,t)=>e.createdAt.getTime()-t.createdAt.getTime())),s}async listV1Conversations(){return this.v1JobRunner.run((async e=>{const t=await this.getIntroductionPeers({startTime:e,direction:tt.SORT_DIRECTION_ASCENDING});return await this.client.keystore.saveV1Conversations({conversations:Array.from(t).map((([e,t])=>({peerAddress:e,createdNs:me(t),topic:ke(e,this.client.address),context:void 0}))).filter((e=>Ne(e.topic)))}),(await this.client.keystore.getV1Conversations()).conversations.map(this.conversationReferenceToV1.bind(this))}))}async listV2Conversations(){return this.v2JobRunner.run((async e=>{const t=await this.getV2ConversationsFromKeystore(),s=await this.updateV2Conversations(e),r=new Set(t.map((e=>e.topic)));for(const e of s)r.has(e.topic)||(t.push(e),r.add(e.topic));return t.sort(((e,t)=>e.createdAt.getTime()-t.createdAt.getTime())),t}))}async getV2ConversationsFromKeystore(){return(await this.client.keystore.getV2Conversations()).conversations.map(this.conversationReferenceToV2.bind(this))}async getV1ConversationsFromKeystore(){return(await this.client.keystore.getV1Conversations()).conversations.map(this.conversationReferenceToV1.bind(this))}async updateV2Conversations(e){const t=await this.client.listInvitations({startTime:e,direction:tt.SORT_DIRECTION_ASCENDING});return this.decodeInvites(t)}async decodeInvites(e,t=!1){const{responses:s}=await this.client.keystore.saveInvites({requests:e.map((e=>({payload:e.message,timestampNs:l.fromString(e.timestampNs),contentTopic:e.contentTopic}))).filter((e=>Ne(e.contentTopic)))}),r=[];for(const e of s)try{r.push(this.saveInviteResponseToConversation(e))}catch(e){if(console.warn("Error saving invite response to conversation: ",e),t)throw e}return r}saveInviteResponseToConversation({result:e,error:t}){if(t||!e||!e.conversation)throw new Error(`Error from keystore: ${t?.code} ${t?.message}}`);return this.conversationReferenceToV2(e.conversation)}conversationReferenceToV2(e){return new Me(this.client,e.topic,e.peerAddress,ge(e.createdNs),e.context)}conversationReferenceToV1(e){return new De(this.client,e.peerAddress,ge(e.createdNs))}async stream(e){const t=new Set,s=Pe(this.client.address),r=Be(this.client.address),n=[s,r];return pe.create(this.client,n,(async e=>{if(e.contentTopic===s){if(!e.message)throw new Error("empty envelope");const s=await Ve.fromBytes(e.message),r=this.getPeerAddress(s);if(!(e=>!t.has(e)&&(t.add(e),!0))(r))return;return await s.decrypt(this.client.keystore,this.client.publicKeyBundle),new De(this.client,r,s.sent)}if(e.contentTopic===r){const t=await this.decodeInvites([e],!0);if(t.length)return t[0]}throw new Error("unrecognized invite topic")}).bind(this),void 0,e)}async streamAllMessages(e){const t=Pe(this.client.address),s=Be(this.client.address),r=new Set([t,s]),n=new Map;for(const e of await this.list())r.add(e.topic),n.set(e.topic,e);const i=(e,t)=>!r.has(e)&&(n.set(e,t),r.add(e),!0),o=await pe.create(this.client,Array.from(r.values()),(async e=>{const r=e.contentTopic;if(!r||!e.message)return null;if(r===t){const t=await Ve.fromBytes(e.message);if(!ht(t))return null;const s=this.getPeerAddress(t);return new De(this.client,s,t.sent).decodeMessage(e)}if(r===s){return(await this.decodeInvites([e],!0))[0]}const i=n.get(r);if(i instanceof De)return i.decodeMessage(e);if(i instanceof Me)return i.decodeMessage(e);throw console.log("Unknown topic"),new Error("Unknown topic")}),(e=>{if(e instanceof qe&&e.contentTopic===t){const t=new De(this.client,e.recipientAddress?.toLowerCase()===this.client.address.toLowerCase()?e.senderAddress:e.recipientAddress,e.sent);return i(t.topic,t)?Array.from(r.values()):void 0}if(e instanceof Me){return i(e.topic,e)?Array.from(r.values()):void 0}}),e),a=async function*(){for await(const e of o)if(e instanceof qe&&(yield e),e instanceof Me)for(const t of await e.messages())yield t}();return a.return=async()=>(await(o?.return()),{value:void 0,done:!0}),a}async getIntroductionPeers(e){const t=Pe(this.client.address),s=await this.client.listEnvelopes(t,(e=>{if(!e.message)throw new Error("empty envelope");return Ve.fromBytes(e.message)}),e),r=new Map;for(const e of s){if(!ht(e))continue;const t=this.getPeerAddress(e);if(t){const s=r.get(t);if(!s||s>e.sent)try{await e.decrypt(this.client.keystore,this.client.publicKeyBundle),r.set(t,e.sent)}catch(e){continue}}}return r}async newConversation(e,t){let s=await this.client.getUserContact(e);if(!s)throw new Error(`Recipient ${e} is not on the XMTP network`);if(e.toLowerCase()===this.client.address.toLowerCase())throw new Error("self messaging not supported");if(s instanceof oe&&!t?.conversationId)return new De(this.client,e,new Date);if(!t?.conversationId){const t=(await this.listV1Conversations()).find((t=>t.peerAddress.toLowerCase()===e.toLowerCase()));if(t){if(!this.client.signedPublicKeyBundle.isFromLegacyBundle())throw new Error("cannot resume pre-existing V1 conversation; client keys not compatible");if(!(s instanceof oe||s.isFromLegacyBundle()))throw new Error("cannot resume pre-existing V1 conversation; peer keys not compatible");return t}}s instanceof oe&&(s=ie.fromLegacyBundle(s));const r=s=>{return s.peerAddress.toLowerCase()===e.toLowerCase()&&(r=t,n=s.context??void 0,r?.conversationId===n?.conversationId);var r,n},n=(await this.getV2ConversationsFromKeystore()).find(r);return n||this.v2JobRunner.run((async e=>{const n=(await this.updateV2Conversations(e)).find(r);return n||this.createV2Convo(s,t)}))}async createV2Convo(e,t){const s=new Date,{payload:r,conversation:n}=await this.client.keystore.createInvite({recipient:e,context:t,createdNs:me(s)});if(!r||!n)throw new Error("Required field not returned from Keystore");const i=await e.walletSignatureAddress();return await this.client.publishEnvelopes([{contentTopic:Be(i),message:r,timestamp:s},{contentTopic:Be(this.client.address),message:r,timestamp:s}]),await this.client.contacts.allow([i]),this.conversationReferenceToV2(n)}getPeerAddress(e){return e.recipientAddress?.toLowerCase()===this.client.address.toLowerCase()?e.senderAddress:e.recipientAddress}}class ut{constructor(e){this.storage=e}static create(){if("undefined"==typeof localStorage)throw new Error("Missing LocalStorage. Use ephemeralPersistence instead");return new ut(localStorage)}async getItem(e){const t=this.storage.getItem(e);return null===t?null:Uint8Array.from(Buffer.from(t,"binary"))}async setItem(e,t){this.storage.setItem(e,Buffer.from(t).toString("binary"))}}class pt{constructor(){this.store=new Map}get length(){return this.store.size}clear(){this.store=new Map}getItem(e){return this.validateString(e),this.store.has(e)?String(this.store.get(e)):null}key(e){if(void 0===e)throw new TypeError("Failed to execute 'key' on 'Storage': 1 argument required, but only 0 present.");const t=[...this.store.keys()];return e>=t.length?null:t[e]}removeItem(e){this.validateString(e),this.store.delete(e)}setItem(e,t){this.validateString(e),this.validateString(t),this.store.set(String(e),String(t))}validateString(e){if("string"!=typeof e)throw new TypeError("Key must be a string")}}class lt extends ut{static create(){return new ut(new pt)}}class wt extends Error{}class ft{constructor(e){if(!e.publicKey.signature)throw new Error("Provided public key is not signed");this.identityKey=e}async createToken(e){const t=je.create(this.identityKey.publicKey.walletSignatureAddress(),e||new Date).toBytes(),n=m(t),i=await this.identityKey.sign(b(n));return new Xe(c.Token.fromPartial({identityKey:r.PublicKey.fromPartial(this.identityKey.publicKey),authDataBytes:t,authDataSignature:s.Signature.fromPartial(i)}))}}const mt=new(0,T.ec)("secp256k1"),gt=I.subtle,vt=Buffer.from("fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141","hex"),bt=Buffer.alloc(32,0);function Et(e,t){if(!e)throw new Error(t||"Assertion failed")}function Kt(e){return t=e,!(!Buffer.isBuffer(t)||32!==t.length)&&(e.compare(bt)>0&&e.compare(vt)<0);var t}function At(e){const t=new Uint8Array(e);return I.getRandomValues(t),Buffer.from(t)}async function Tt(e){const t=await gt.digest("SHA-512",e);return Buffer.from(t)}function kt(e){return function(t,s,r){return new Promise((function(n){return gt.importKey("raw",s,{name:"AES-CBC"},!1,[e]).then((function(s){const n={name:"AES-CBC",iv:t};return gt[e](n,s,r)})).then((function(e){n(Buffer.from(new Uint8Array(e)))}))}))}}const St=kt("encrypt"),Ct=kt("decrypt");async function Pt(e,t){const s=await gt.importKey("raw",e,{name:"HMAC",hash:{name:"SHA-256"}},!1,["sign"]);return Buffer.from(await gt.sign({name:"HMAC",hash:"SHA-256"},s,t))}function Bt(e){return Et(32===e.length,"Bad private key"),Et(Kt(e),"Bad private key"),Buffer.from(mt.keyFromPrivate(e).getPublic("array"))}function It(e,t){return new Promise((function(s){Et(Buffer.isBuffer(e),"Bad private key"),Et(Buffer.isBuffer(t),"Bad public key"),Et(32===e.length,"Bad private key"),Et(Kt(e),"Bad private key"),Et(65===t.length||33===t.length,"Bad public key"),65===t.length&&Et(4===t[0],"Bad public key"),33===t.length&&Et(2===t[0]||3===t[0],"Bad public key");const r=mt.keyFromPrivate(e),n=mt.keyFromPublic(t),i=r.derive(n.getPublic());s(Buffer.from(i.toArray()))}))}async function Rt(e,t){const s=await It(e,t.ephemeralPublicKey),r=await Tt(s),n=r.slice(0,32),i=r.slice(32),o=Buffer.concat([t.iv,t.ephemeralPublicKey,t.ciphertext]);return Et(await async function(e,t,s){return function(e,t){if(e.length!==t.length)return!1;let s=0;for(let r=0;r<e.length;r++)s|=e[r]^t[r];return 0===s}(await Pt(e,t),s)}(i,o,t.mac),"Bad mac"),Ct(t.iv,n,t.ciphertext)}async function Nt(e,t){await k();const s=e.publicKey.secp256k1Uncompressed.bytes,r=e.secp256k1.bytes;return S(s,r,t)}async function Dt(e,t){await k();const s=e.publicKey.secp256k1Uncompressed.bytes,r=e.secp256k1.bytes;return C(s,r,t)}class Mt{constructor({topic:e,context:t,aes256GcmHkdfSha256:s}){if(!e||!e.length)throw new Error("Missing topic");if(!s||!s.keyMaterial||!s.keyMaterial.length)throw new Error("Missing key material");this.topic=e,this.context=t,this.aes256GcmHkdfSha256=s}static createRandom(e){const t=Se(Buffer.from(I.getRandomValues(new Uint8Array(32))).toString("base64").replace(/=*$/g,"").replace(/\//g,"-")),s=I.getRandomValues(new Uint8Array(32));return new Mt({topic:t,aes256GcmHkdfSha256:{keyMaterial:s},context:e})}toBytes(){return h.InvitationV1.encode(this).finish()}static fromBytes(e){return new Mt(h.InvitationV1.decode(e))}}class _t{constructor({sender:e,recipient:t,createdNs:s}){if(!e)throw new Error("Missing sender");if(!t)throw new Error("Missing recipient");this.sender=new ie(e),this.recipient=new ie(t),this.createdNs=s}toBytes(){return h.SealedInvitationHeaderV1.encode(this).finish()}static fromBytes(e){return new _t(h.SealedInvitationHeaderV1.decode(e))}}class xt{constructor({headerBytes:e,ciphertext:t}){if(!e||!e.length)throw new Error("Missing header bytes");if(!t)throw new Error("Missing ciphertext");this.headerBytes=e,this.ciphertext=new B(t)}get header(){return this._header||(this._header=_t.fromBytes(this.headerBytes)),this._header}async getInvitation(e){if(this._invitation)return this._invitation;const t=this.header;let s;s=e.identityKey.matches(this.header.sender.identityKey)?await e.sharedSecret(t.recipient,t.sender.preKey,!1):await e.sharedSecret(t.sender,t.recipient.preKey,!0);const r=await _(this.ciphertext,s,this.headerBytes);return this._invitation=Mt.fromBytes(r),this._invitation}toBytes(){return h.SealedInvitationV1.encode(this).finish()}static fromBytes(e){return new xt(h.SealedInvitationV1.decode(e))}}class Vt{constructor({v1:e}){if(!e)throw new Error("Missing v1 or v2 invitation");this.v1=new xt(e)}toBytes(){return h.SealedInvitation.encode(this).finish()}static fromBytes(e){return new Vt(h.SealedInvitation.decode(e))}static async fromEnvelope(e){if(!e.message||!e.timestampNs)throw new Error("invalid invitation envelope");const t=Vt.fromBytes(e.message),s=l.fromString(e.timestampNs),r=t.v1?.header.createdNs;if(!r||!r.equals(s))throw new Error("envelope and header timestamp mistmatch");return t}static async createV1({sender:e,recipient:t,created:s,invitation:r}){const n=new _t({sender:e.getPublicKeyBundle(),recipient:t,createdNs:me(s)}).toBytes(),i=await e.sharedSecret(t,e.getCurrentPreKey().publicKey,!1),o=r.toBytes(),a=await M(o,i,n);return new Vt({v1:{headerBytes:n,ciphertext:a}})}}const Ut=(e,t)=>e instanceof Ee?e:new Ee(t,e.message),qt=(e,t,s)=>Promise.all(e.map((async e=>{try{return{result:await t(e)}}catch(e){return{error:Ut(e,s)}}}))),Ot=e=>e instanceof oe?e:new oe(e),Lt=(e,t,s)=>{for(const s of t)if(!e[s])throw new Ee(i.ErrorCode.ERROR_CODE_INVALID_INPUT,`Missing field ${String(s)}`);for(const t of s){const s=e[t];if(!s||!s?.length)throw new Ee(i.ErrorCode.ERROR_CODE_INVALID_INPUT,`Missing field ${String(t)}`)}return!0},Ht=e=>{if(!e?.aes256GcmHkdfSha256?.keyMaterial)throw new Ee(i.ErrorCode.ERROR_CODE_INVALID_INPUT,"Missing key material");return e.aes256GcmHkdfSha256.keyMaterial},Ft=({invitation:e,createdNs:t,peerAddress:s})=>({context:e.context,topic:e.topic,peerAddress:s,createdNs:t});class Gt{constructor(e,t,s=new Map){this.persistenceKey=t,this.persistence=e,this.revision=0,this.mutex=new A,this.topicMap=s}get revisionKey(){return this.persistenceKey+"/revision"}static async create(e){const t=new Gt(e,"invitations/v1");return await t.refresh(),t}validate(e){return!!e.topic&&e.topic.length>0&&!!e.invitation}async refresh(){const e=await this.getRevision();if(e>this.revision)for(const[e,t]of await this.loadFromPersistence())this.topicMap.set(e,t);this.revision=e}async getRevision(){const e=await this.persistence.getItem(this.revisionKey);return e?function(e){const t=e.buffer;return new DataView(t).getInt32(0,!0)}(e):0}async setRevision(e){await this.persistence.setItem(this.revisionKey,function(e){const t=new ArrayBuffer(4);return new DataView(t).setInt32(0,e,!0),new Uint8Array(t)}(e))}async loadFromPersistence(){const e=await this.persistence.getItem(this.persistenceKey);return e?(e=>{const t=new Map;for(const[s,r]of Object.entries(e.topics))t.set(s,r);return t})(i.TopicMap.decode(e)):new Map}async store(){await this.persistence.setItem(this.persistenceKey,this.toBytes()),this.revision++,await this.setRevision(this.revision)}async add(e){await this.mutex.runExclusive((async()=>{await this.refresh();let t=!1;for(const s of e){if(!this.validate(s)){console.warn("Invalid topic data",s.topic);continue}const{topic:e,...r}=s;this.topicMap.has(e)||(this.topicMap.set(e,r),t=!0)}t&&await this.store()}))}get topics(){return[...this.topicMap.values()]}lookup(e){return this.topicMap.get(e)}toBytes(){return i.TopicMap.encode({topics:Object.fromEntries(this.topicMap)}).finish()}}class $t extends Gt{static async create(e){const t=new $t(e,"conversation-v1/v1");return await t.refresh(),t}validate(e){return!!(e.topic&&e.topic.length&&e.peerAddress?.length>0)}}const jt=async(e,t,s,r)=>M(s,await e.sharedSecret(t,e.getCurrentPreKey().publicKey,!1),r),{ErrorCode:Xt}=i,Jt=(new TextEncoder).encode("__XMTP__INVITATION__SALT__XMTP__");class zt{constructor(e,t,s,r){this.v1Keys=e,this.v2Keys=Fe.fromLegacyBundle(e),this.v1Store=t,this.v2Store=s,this.authenticator=new ft(e.identityKey),this.jobStatePersistence=r}static async create(e,t){return new zt(e,await $t.create(t),await Gt.create(t),t)}get walletAddress(){return this.v1Keys.identityKey.publicKey.walletSignatureAddress()}async decryptV1(e){const t=await qt(e.requests,(async e=>{Lt(e,["payload","peerKeys"],["headerBytes"]);const{payload:t,peerKeys:s,headerBytes:r,isSender:n}=e,i=await(async(e,t,s,r,n)=>_(s,await e.sharedSecret(t,e.getCurrentPreKey().publicKey,!n),r))(this.v1Keys,Ot(s),t,r,n);return{decrypted:i}}),i.ErrorCode.ERROR_CODE_UNSPECIFIED);return i.DecryptResponse.fromPartial({responses:t})}async decryptV2(e){const t=await qt(e.requests,(async e=>{Lt(e,["payload"],["headerBytes"]);const{payload:t,headerBytes:s,contentTopic:r}=e,n=this.v2Store.lookup(r);if(!n)throw new Ee(i.ErrorCode.ERROR_CODE_NO_MATCHING_PREKEY,"no topic key");const o=await((e,t,s)=>_(e,t,s))(t,Ht(n.invitation),s);return{decrypted:o}}),Xt.ERROR_CODE_UNSPECIFIED);return i.DecryptResponse.fromPartial({responses:t})}async encryptV1(e){const t=await qt(e.requests,(async e=>{Lt(e,["payload","recipient"],["headerBytes"]);const{recipient:t,payload:s,headerBytes:r}=e;return{encrypted:await jt(this.v1Keys,Ot(t),s,r)}}),Xt.ERROR_CODE_UNSPECIFIED);return i.EncryptResponse.fromPartial({responses:t})}async createAuthToken({timestampNs:e}){return this.authenticator.createToken(e?ge(e):void 0)}async selfEncrypt(e){const t=await qt(e.requests,(async e=>{const{payload:t}=e;if(!t)throw new Ee(Xt.ERROR_CODE_INVALID_INPUT,"Missing field payload");return{encrypted:await Nt(this.v1Keys.identityKey,t)}}),Xt.ERROR_CODE_INVALID_INPUT);return i.SelfEncryptResponse.fromPartial({responses:t})}async selfDecrypt(e){const t=await qt(e.requests,(async e=>{const{payload:t}=e;if(!t)throw new Ee(Xt.ERROR_CODE_INVALID_INPUT,"Missing field payload");return{decrypted:await Dt(this.v1Keys.identityKey,t)}}),Xt.ERROR_CODE_INVALID_INPUT);return i.DecryptResponse.fromPartial({responses:t})}async getPrivatePreferencesTopicIdentifier(){const e=await async function(e){await k();const t=e.secp256k1.bytes;return P(t)}(this.v1Keys.identityKey);return i.GetPrivatePreferencesTopicIdentifierResponse.fromPartial({identifier:e})}async encryptV2(e){const t=await qt(e.requests,(async e=>{Lt(e,["payload"],["headerBytes"]);const{payload:t,headerBytes:s,contentTopic:r}=e,n=this.v2Store.lookup(r);if(!n)throw new Ee(Xt.ERROR_CODE_NO_MATCHING_PREKEY,"no topic key");const i=Ht(n.invitation),o=await((e,t,s)=>M(e,t,s))(t,i,s),a=`${Math.floor(Date.now()/1e3/60/60/24/30)}-${await this.getAccountAddress()}`;return{encrypted:o,senderHmac:await q(i,(new TextEncoder).encode(a),s)}}),Xt.ERROR_CODE_INVALID_INPUT);return i.EncryptResponse.fromPartial({responses:t})}async saveInvites(e){const t=[],s=await qt(e.requests,(async({payload:e,timestampNs:s})=>{const r=Vt.fromBytes(e);if(r.v1){if(!r.v1.header.createdNs.equals(s))throw new Error("envelope and header timestamp mismatch");const e=r.v1.header.sender.equals(this.v2Keys.getPublicKeyBundle()),n=await r.v1.getInvitation(this.v2Keys),i={invitation:n,createdNs:r.v1.header.createdNs,peerAddress:e?await r.v1.header.recipient.walletSignatureAddress():await r.v1.header.sender.walletSignatureAddress()};return t.push({...i,topic:n.topic}),{conversation:Ft(i)}}}),Xt.ERROR_CODE_INVALID_INPUT);return await this.v2Store.add(t),i.SaveInvitesResponse.fromPartial({responses:s})}async createInvite(e){try{Lt(e,["recipient"],[]);const s=ge(e.createdNs),r=(t=e.recipient)instanceof ie?t:new ie(t),n=await this.getAccountAddress(),o=await r.walletSignatureAddress(),a=await this.v2Keys.sharedSecret(r,this.v2Keys.getCurrentPreKey().publicKey,n<o),c=[n,o].sort(),d=(e.context?.conversationId||"")+c.join(),h=(new TextEncoder).encode(d),y=F(await Pt(Buffer.from(a),Buffer.from(h))),u=["0",...c].join("|"),p=(new TextEncoder).encode(u),l=await async function(e,t){const s=await I.subtle.importKey("raw",e,"HKDF",!1,["deriveKey"]);return I.subtle.deriveKey({name:"HKDF",hash:"SHA-256",salt:Jt,info:t},s,{name:"AES-GCM",length:256},!0,["encrypt","decrypt"])}(a,p),w=new Uint8Array(await I.subtle.exportKey("raw",l)),f=new Mt({topic:Se(y),aes256GcmHkdfSha256:{keyMaterial:w},context:e.context}),m=await Vt.createV1({sender:this.v2Keys,recipient:r,created:s,invitation:f}),g={invitation:f,topic:f.topic,createdNs:e.createdNs,peerAddress:await r.walletSignatureAddress()};return await this.v2Store.add([g]),i.CreateInviteResponse.fromPartial({conversation:Ft(g),payload:m.toBytes()})}catch(e){throw Ut(e,Xt.ERROR_CODE_INVALID_INPUT)}var t}async signDigest(e){Lt(e,["digest"],[]);const{digest:t,identityKey:s,prekeyIndex:r}=e;let n;if(s)n=this.v1Keys.identityKey;else{if(void 0===r||!Number.isInteger(r))throw new Ee(Xt.ERROR_CODE_INVALID_INPUT,"must specifify identityKey or prekeyIndex");if(n=this.v1Keys.preKeys[r],!n)throw new Ee(Xt.ERROR_CODE_NO_MATCHING_PREKEY,"no prekey found")}return n.sign(t)}async saveV1Conversations({conversations:e}){return await this.v1Store.add(e.map((e=>({topic:ke(e.peerAddress,this.walletAddress),peerAddress:e.peerAddress,createdNs:e.createdNs,invitation:void 0})))),{}}async getV1Conversations(){return{conversations:this.v1Store.topics.map(this.topicDataToV1ConversationReference.bind(this))}}async getV2Conversations(){const e=this.v2Store.topics.map((e=>Ft(e)));return e.sort(((e,t)=>e.createdNs.div(1e6).sub(t.createdNs.div(1e6)).toNumber())),i.GetConversationsResponse.fromPartial({conversations:e})}async getPublicKeyBundle(){return this.v1Keys.getPublicKeyBundle()}async getPrivateKeyBundle(){return this.v1Keys}async getAccountAddress(){return this.accountAddress||(this.accountAddress=await this.v2Keys.getPublicKeyBundle().walletSignatureAddress()),this.accountAddress}async getRefreshJob({jobType:e}){if(e===i.JobType.JOB_TYPE_UNSPECIFIED)throw new Ee(Xt.ERROR_CODE_INVALID_INPUT,"invalid job type");const t=await this.getLastRunTime(e);return i.GetRefreshJobResponse.fromPartial({lastRunNs:t||l.fromNumber(0)})}async setRefreshJob({jobType:e,lastRunNs:t}){const s=await this.buildJobStorageKey(e);return await this.jobStatePersistence.setItem(s,Uint8Array.from(t.toBytes())),{}}topicDataToV1ConversationReference(e){return{peerAddress:e.peerAddress,createdNs:e.createdNs,topic:ke(e.peerAddress,this.walletAddress),context:void 0}}buildJobStorageKey(e){return`refreshJob/${e.toString()}`}async getLastRunTime(e){const t=await this.jobStatePersistence.getItem(this.buildJobStorageKey(e));if(t&&t.length)return l.fromBytes([...t])}lookupTopic(e){return this.v2Store.lookup(e)}async getV2ConversationHmacKeys(e){const t=Math.floor(Date.now()/1e3/60/60/24/30),s={};let r=this.v2Store.topics;return e?.topics&&(r=r.filter((t=>void 0!==t.invitation&&e.topics.includes(t.invitation.topic)))),await Promise.all(r.map((async e=>{if(e.invitation?.topic){const r=Ht(e.invitation),n=await Promise.all([t-1,t,t+1].map((async e=>{const t=`${e}-${await this.getAccountAddress()}`,s=await U(r,(new TextEncoder).encode(t));return{thirtyDayPeriodsSinceEpoch:e,hmacKey:await L(s)}})));s[e.invitation.topic]={values:n}}}))),{hmacKeys:s}}}class Yt{constructor(e){this.apiClient=e}async getItem(e){for await(const t of this.apiClient.queryIterator({contentTopic:this.buildTopic(e)},{pageSize:1,direction:d.SortDirection.SORT_DIRECTION_DESCENDING}))if(t.message)try{return Uint8Array.from(t.message)}catch(e){console.log(e)}return null}async setItem(e,t){const s=Uint8Array.from(t);await this.apiClient.publish([{contentTopic:this.buildTopic(e),message:s}])}setAuthenticator(e){this.apiClient.setAuthenticator(e)}buildTopic(e){return Ie(e)}}class Wt{constructor({eciesBytes:t,signature:s}){if(!t||!t.length)throw new Error("eciesBytes is empty");if(!s)throw new Error("signature is undefined");this.eciesBytes=t,this.signature=new Q(s),this.ciphertext=e.SignedEciesCiphertext_Ecies.decode(t)}toBytes(){return e.SignedEciesCiphertext.encode(this).finish()}async verify(e){return e.verify(this.signature,await D(this.eciesBytes))}static fromBytes(t){const s=e.SignedEciesCiphertext.decode(t);return new Wt(s)}static async create(t,s){(e=>{if(16!==e.iv.length)throw new Error("Invalid iv length");if(65!==e.ephemeralPublicKey.length)throw new Error("Invalid ephemPublicKey length");if(e.ciphertext.length<1||e.ciphertext.length%16!=0)throw new Error("Invalid ciphertext length");if(32!==e.mac.length)throw new Error("Invalid mac length")})(t);const r=e.SignedEciesCiphertext_Ecies.encode(t).finish(),n=await s.sign(await D(r));return new Wt({eciesBytes:r,signature:n})}}class Qt{constructor(e,t){this.persistence=e,this.privateKey=t,this.privateKeyBytes=Buffer.from(t.secp256k1.bytes),this.publicKey=Bt(this.privateKeyBytes)}async getItem(e){const t=await this.persistence.getItem(e);return t?this.decrypt(t):null}async setItem(e,t){const s=await this.encrypt(t);await this.persistence.setItem(e,s)}async encrypt(e){const t=await async function(e,t,s){s=s||{};const r=s?.iv||At(16);let n=s?.ephemPrivateKey||At(32);for(;!Kt(n);){if(s?.ephemPrivateKey)throw new Error("ephemPrivateKey is not valid");n=At(32)}const i=Bt(n),o=await Tt(await It(n,e)),a=o.slice(0,32),c=o.slice(32),d=await St(r,a,t),h=Buffer.concat([r,i,d]);return{iv:r,ephemeralPublicKey:i,ciphertext:d,mac:await Pt(c,h)}}(this.publicKey,Buffer.from(e));return this.serializeEcies(t)}async decrypt(e){const t=await this.deserializeEcies(e),s=await Rt(this.privateKeyBytes,t);return Uint8Array.from(s)}async serializeEcies(e){return(await Wt.create(e,this.privateKey)).toBytes()}async deserializeEcies(e){const t=Wt.fromBytes(e);if(!await t.verify(this.privateKey.publicKey))throw new Error("signature validation failed");const s=t.ciphertext;return{ciphertext:Buffer.from(s.ciphertext),mac:Buffer.from(s.mac),iv:Buffer.from(s.iv),ephemeralPublicKey:Buffer.from(s.ephemeralPublicKey)}}}class Zt{constructor(e,t){this.prefix=e,this.persistence=t}getItem(e){return this.persistence.getItem(this.buildKey(e))}setItem(e,t){return this.persistence.setItem(this.buildKey(e),t)}buildKey(e){return this.prefix+e}}const es=async(e,t)=>{if(!e.persistConversations)return lt.create();const s=await t.identityKey.publicKey.walletSignatureAddress(),r=`xmtp/${e.env}/${s}/`;const n=e.basePersistence,i=!e.disablePersistenceEncryption;return new Zt(r,i?new Qt(n,t.identityKey):n)},ts="key_bundle";class ss{constructor(e,t,s){this.signer=e,this.persistence=t,this.preEnableIdentityCallback=s}async getStorageAddress(e){let t=await this.signer.getAddress();return t=g(t),`${t}/${e}`}async loadPrivateKeyBundle(){const e=await this.persistence.getItem(await this.getStorageAddress(ts));if(!e)return null;const[t,s]=await this.fromEncryptedBytes(this.signer,Uint8Array.from(e));return s&&await this.storePrivateKeyBundle(t),t}async storePrivateKeyBundle(e){const t=await this.getStorageAddress(ts),s=await this.toEncryptedBytes(e,this.signer);"function"==typeof this.persistence.setAuthenticator&&this.persistence.setAuthenticator(new ft(e.identityKey)),await this.persistence.setItem(t,s)}async toEncryptedBytes(e,s){const r=e.encode(),n=I.getRandomValues(new Uint8Array(32)),i=ns(n),o=await s.getAddress();this.preEnableIdentityCallback&&await this.preEnableIdentityCallback();const a=await s.signMessage(i);if(!K({address:o,message:i,signature:a}))throw new Error("invalid signature");const c=b(a),d=await M(r,c);return t.EncryptedPrivateKeyBundle.encode({v1:{walletPreKey:n,ciphertext:d}}).finish()}async fromEncryptedBytes(e,s){const[r,n]=function(e){try{const s=t.EncryptedPrivateKeyBundle.decode(e);if(s.v1)return[s.v1,!1]}catch(s){return[t.EncryptedPrivateKeyBundleV1.decode(e),!0]}throw new Error("unrecognized encrypted private key bundle version")}(s);if(!r.walletPreKey)throw new Error("missing wallet pre-key");if(!r.ciphertext?.aes256GcmHkdfSha256)throw new Error("missing bundle ciphertext");this.preEnableIdentityCallback&&await this.preEnableIdentityCallback();const i=b(await e.signMessage(ns(r.walletPreKey)));try{const e=new B(r.ciphertext),t=await _(e,i),[s,o]=rs(t);return[s,n||o]}catch(e){if(65!==i.length)throw new Error("Expected 65 bytes before trying a different recovery byte");const t=i[i.length-1];let s=i.slice(0,i.length-1);s=t<27?new Uint8Array([...s,t+27]):new Uint8Array([...s,t-27]);const o=new B(r.ciphertext),a=await _(o,s),[c,d]=rs(a);return[c,n||d]}}}function rs(e){try{const t=$e(e);if(t instanceof Fe)throw new Error("V2 bundles not supported yet");return[t,!1]}catch(s){const r=t.PrivateKeyBundleV1.decode(e);return[new Ge(r),!0]}}function ns(e){return`XMTP : Enable Identity\n${F(e)}\n\nFor more info: https://xmtp.org/signatures/`}class is{async newKeystore(e,t,s){if(!s)throw new wt("Wallet required to generate new keys");e.preCreateIdentityCallback&&await e.preCreateIdentityCallback();const r=await Ge.generate(s),n=new ss(s,new Yt(t),e.preEnableIdentityCallback);return await n.storePrivateKeyBundle(r),zt.create(r,await es(e,r))}}class os{async newKeystore(e,t,s){if(!s)throw new wt("No wallet provided");const r=new ss(s,new Yt(t),e.preEnableIdentityCallback),n=await r.loadPrivateKeyBundle();if(!n)throw new wt("No keys found");return zt.create(n,await es(e,n))}}function as(){return window.ethereum}function cs(e){const[t,s,...r]=e.split(".");return{major:Number(t),minor:Number(s),patch:r.join(".")}}function ds(e,t){if(!e||!t)return!1;const s=cs(e),r=cs(t);return s.major!==r.major?s.major>r.major:s.minor!==r.minor?s.minor>r.minor:!(!s.patch||!r.patch)&&function(e,t){const[s,r]=e.split("-"),[n,i]=t.split("-");if(Number(s)!==Number(n))return Number(s)>Number(n);if(!r||!i)return!1;const[o,a]=r.split("."),[c,d]=i.split(".");if(o!==c)return!0;return Number(a)>Number(d)}(s.patch,r.patch)}const{GetKeystoreStatusResponse_KeystoreStatus:hs,InitKeystoreRequest:ys,InitKeystoreResponse:us,GetKeystoreStatusRequest:ps,GetKeystoreStatusResponse:ls}=i;async function ws(e,t,s,r,n){let i=null;if(t.req){const e=(0,t.req.encode)(s).finish();i=we(e,0,e.length)}const o=await async function(e,t,s,r){const n={meta:s};"string"==typeof t&&(n.req=t);const i=await(as()?.request({method:"wallet_invokeSnap",params:{snapId:r,request:{method:e,params:n}}}));if(!i||"object"!=typeof i)throw new Error("No response value");return i.res}(e,i,r,n);if(Array.isArray(o))throw new Error("Unexpected array response");return t.res.decode(le(o))}async function fs(){const e=as();if(e?.isMetaMask)try{return await e.request({method:"wallet_getSnaps"}),!0}catch{}if(void 0!==e?.detected&&Array.isArray(e.detected))for(const t of e.detected)try{return await t.request({method:"wallet_getSnaps"}),e?.setProvider?.(t),!0}catch{}if(void 0!==e?.providers&&Array.isArray(e.providers))for(const t of e.providers)try{return await t.request({method:"wallet_getSnaps"}),window.ethereum=t,!0}catch{}return!1}async function ms(e,t){try{const s=await async function(){return await(as()?.request({method:"wallet_getSnaps"}))}();return s?Object.values(s).find((s=>{return s&&s.id===e&&(!t||(r=s.version,n=t,!r||!n||cs(r).major===cs(n).major));var r,n})):void 0}catch(e){return void console.warn("Failed to obtain installed snap",e)}}const gs={req:ps,res:ls};const vs={req:ys,res:us};const bs={decryptV1:{req:i.DecryptV1Request,res:i.DecryptResponse},decryptV2:{req:i.DecryptV2Request,res:i.DecryptResponse},encryptV1:{req:i.EncryptV1Request,res:i.EncryptResponse},encryptV2:{req:i.EncryptV2Request,res:i.EncryptResponse},saveInvites:{req:i.SaveInvitesRequest,res:i.SaveInvitesResponse},createInvite:{req:i.CreateInviteRequest,res:i.CreateInviteResponse},createAuthToken:{req:i.CreateAuthTokenRequest,res:c.Token},signDigest:{req:i.SignDigestRequest,res:s.Signature},getPublicKeyBundle:{req:null,res:r.PublicKeyBundle},getPrivateKeyBundle:{req:null,res:t.PrivateKeyBundleV1},saveV1Conversations:{req:i.SaveV1ConversationsRequest,res:i.SaveV1ConversationsResponse},getV1Conversations:{req:null,res:i.GetConversationsResponse},getV2Conversations:{req:null,res:i.GetConversationsResponse},getRefreshJob:{req:i.GetRefreshJobRequest,res:i.GetRefreshJobResponse},setRefreshJob:{req:i.SetRefeshJobRequest,res:i.SetRefreshJobResponse},selfEncrypt:{req:i.SelfEncryptRequest,res:i.SelfEncryptResponse},selfDecrypt:{req:i.SelfDecryptRequest,res:i.DecryptResponse},getPrivatePreferencesTopicIdentifier:{req:null,res:i.GetPrivatePreferencesTopicIdentifierResponse},getV2ConversationHmacKeys:{req:i.GetConversationHmacKeysRequest,res:i.GetConversationHmacKeysResponse}},Es={...bs,getKeystoreStatus:{req:i.GetKeystoreStatusRequest,res:i.GetKeystoreStatusResponse},initKeystore:{req:i.InitKeystoreRequest,res:i.InitKeystoreResponse}};const{GetKeystoreStatusResponse_KeystoreStatus:Ks}=i;class As{constructor(e="local:http://localhost:8080",t){this.snapId=e,this.snapVersion=t}async newKeystore(e,t,s){if(!s)throw new wt("No wallet provided");if(!await fs())throw new wt("MetaMask with Snaps not detected");const r=await s.getAddress(),n=e.env,i=await ms(this.snapId,this.snapVersion);if(i&&!ds(this.snapVersion,i.version)||await async function(e,t={}){await(as()?.request({method:"wallet_requestSnaps",params:{[e]:t}}))}(this.snapId,this.snapVersion?{version:this.snapVersion}:{}),!await async function(e,t,s){const r=await async function(e,t){const s=await ws("getKeystoreStatus",gs,{walletAddress:e.walletAddress},e,t);if([hs.KEYSTORE_STATUS_UNSPECIFIED,hs.UNRECOGNIZED].includes(s.status))throw new Error("No status specified in response");return s.status}({walletAddress:e,env:t},s);if(r===Ks.KEYSTORE_STATUS_INITIALIZED)return!0;return!1}(r,n,this.snapId)){const r=await async function(e,t,s){if(e.privateKeyOverride){const t=$e(e.privateKeyOverride);if(!(t instanceof Ge))throw new Error("Unsupported private key bundle version");return t}if(!s)throw new Error("No privateKeyOverride or wallet");return async function(e,t,s){const r=new os;try{const n=await r.newKeystore(e,t,s);return new Ge(await n.getPrivateKeyBundle())}catch(r){if(r instanceof wt)return async function(e,t,s){const r=new is,n=await r.newKeystore(e,t,s);return new Ge(await n.getPrivateKeyBundle())}(e,t,s);throw r}}(e,t,s)}(e,t,s);await async function(e,t,s){const r=e.identityKey.publicKey.walletSignatureAddress(),n=await ws("initKeystore",vs,{v1:e},{walletAddress:r,env:t},s);if(n.error)throw new Ee(n.error.code,n.error.message)}(r,n,this.snapId)}return function(e,t,s){const r={},n={walletAddress:e,env:t};for(const[e,t]of Object.entries(Es))r[e]=async r=>t.req?ws(e,t,r,n,s):ws(e,t,void 0,n,s);return{...r,getAccountAddress:async()=>e}}(r,n,this.snapId)}}class Ts{async newKeystore(e){const{privateKeyOverride:t}=e;if(!t)throw new wt("No private key override provided");const s=$e(t);if(s instanceof Fe)throw new Error("V2 private key bundle found. Only V1 supported");return zt.create(s,await es(e,s))}}function ks(e){if(!e)return null;if(function(e){return"type"in e&&("walletClient"===e.type||"base"===e.type)}(e))return function(e){const{account:t}=e;if(!t||!t.address)throw new Error("WalletClient is not configured");return{getAddress:async()=>t.address,signMessage:async s=>e.signMessage({message:"string"==typeof s?s:{raw:s},account:t})}}(e);if("function"!=typeof e.getAddress)throw new Error("Unknown wallet type");return e}function Ss(e){if(e===a.Compression.COMPRESSION_GZIP)return"gzip";if(e===a.Compression.COMPRESSION_DEFLATE)return"deflate";throw new Error("unrecognized compression algorithm")}function Cs(e,t=1024){let s=0;return new ReadableStream({pull(r){if(s>=e.length)return r.close();let n=s+t;n=n<=e.length?n:e.length,r.enqueue(e.subarray(s,n)),s=n}})}function Ps(e,t){let s=0;return new WritableStream({write(r){const n=s+r.length;if(n>t)throw new Error("maximum output size exceeded");for(;e.bytes.length<n;)e.bytes=Bs(e.bytes,t);e.bytes.set(r,s),s=n},close(){s<e.bytes.length&&(e.bytes=e.bytes.subarray(0,s))}})}function Bs(e,t){let s=2*e.length;s>t&&(s=t);const r=new Uint8Array(s);return r.set(e),r}function Is(e){let t;try{t=y.ContactBundle.decode(e)}catch(s){const n=r.PublicKeyBundle.decode(e);t={v1:{keyBundle:new oe(n)},v2:void 0}}if(t.v1?.keyBundle)return new oe(t.v1.keyBundle);if(t.v2?.keyBundle)return new ie(t.v2.keyBundle);throw new Error("unknown or invalid contact bundle")}function Rs(e){return e instanceof oe?y.ContactBundle.encode({v1:{keyBundle:e},v2:void 0}).finish():y.ContactBundle.encode({v1:void 0,v2:{keyBundle:e}}).finish()}class Ns{constructor(e,t,s){this.value=e,this.entryType=t,this.permissionType=s}get key(){return`${this.entryType}-${this.value}`}static fromAddress(e,t="unknown"){return new Ns(e,"address",t)}}class Ds{constructor(e){this.entries=new Map,this.client=e}allow(e){const t=Ns.fromAddress(e,"allowed");return this.entries.set(t.key,"allowed"),t}deny(e){const t=Ns.fromAddress(e,"denied");return this.entries.set(t.key,"denied"),t}state(e){const t=Ns.fromAddress(e);return this.entries.get(t.key)??"unknown"}async getIdentifier(){if(!this._identifier){const{identifier:e}=await this.client.keystore.getPrivatePreferencesTopicIdentifier();this._identifier=e}return this._identifier}async decodeMessages(e){const{responses:t}=await this.client.keystore.selfDecrypt({requests:e.map((e=>({payload:e})))});return t.reduce(((e,t)=>t.result?.decrypted?e.concat(u.PrivatePreferencesAction.decode(t.result.decrypted)):e),[])}processActions(e,t){const s=[];return e.forEach((e=>{e.allowAddress?.walletAddresses.forEach((e=>{s.push(this.allow(e))})),e.denyAddress?.walletAddresses.forEach((e=>{s.push(this.deny(e))}))})),t&&(this.lastEntryTimestamp=be(t)),s}async stream(e){const t=await this.getIdentifier(),s=Re(t);return pe.create(this.client,[s],(async e=>{if(!e.message)return;const t=await this.decodeMessages([e.message]);return this.processActions(t,e.timestampNs),t[0]}),void 0,e)}reset(){this.entries.clear()}async load(e){const t=await this.getIdentifier(),s=Re(t);let r;const n=await this.client.listEnvelopes(s,(async({message:e,timestampNs:t})=>(t&&(r=t),e)),{startTime:e}),i=await this.decodeMessages(n);return this.processActions(i,r)}async publish(e){const t=await this.getIdentifier(),s=e.reduce(((e,t)=>{if("address"===t.entryType){const s={allowAddress:"allowed"===t.permissionType?{walletAddresses:[t.value]}:void 0,denyAddress:"denied"===t.permissionType?{walletAddresses:[t.value]}:void 0,allowGroup:void 0,denyGroup:void 0};return e.concat(u.PrivatePreferencesAction.encode(s).finish())}return e}),[]),{responses:r}=await this.client.keystore.selfEncrypt({requests:s.map((e=>({payload:e})))}),n=r.reduce(((e,t)=>t.result?.encrypted?e.concat(t.result?.encrypted):e),[]),i=Re(t),o=new Date,a=n.map((e=>({contentTopic:i,message:e,timestamp:o})));await this.client.publishEnvelopes(a),e.forEach((e=>{this.entries.set(e.key,e.permissionType)}))}}class Ms{constructor(e){this.addresses=new Set,this.consentList=new Ds(e),this.client=e,this.jobRunner=new dt("user-preferences",e.keystore)}async loadConsentList(e){return this.jobRunner.run((async t=>this.consentList.load(e??t)))}async refreshConsentList(){return this.consentList.reset(),await this.jobRunner.resetLastRunTime(),this.loadConsentList()}async streamConsentList(e){return this.consentList.stream(e)}get lastConsentListEntryTimestamp(){return this.consentList.lastEntryTimestamp}setConsentListEntries(e){e.length&&(this.consentList.reset(),e.forEach((e=>{"allowed"===e.permissionType&&this.consentList.allow(e.value),"denied"===e.permissionType&&this.consentList.deny(e.value)})))}isAllowed(e){return"allowed"===this.consentList.state(e)}isDenied(e){return"denied"===this.consentList.state(e)}consentState(e){return this.consentList.state(e)}async allow(e){await this.consentList.publish(e.map((e=>Ns.fromAddress(e,"allowed"))))}async deny(e){await this.consentList.publish(e.map((e=>Ns.fromAddress(e,"denied"))))}}var _s;!function(e){e[e.none=0]="none",e[e.xmtpTopicStore=1]="xmtpTopicStore"}(_s||(_s={}));const xs=_s.none;class Vs{static createConfiguration(){return{type:xs,version:0}}constructor(e){this.configuration=e}get backupType(){return xs}}const Us=_s.xmtpTopicStore;class qs{static createConfiguration(e){return{type:Us,version:0,topic:"history-v0:"+e}}constructor(e){this.configuration=e}get backupType(){return Us}}async function Os(e,t){const s=await async function(e,t){let s;switch((await t()).type){case _s.none:s=Vs.createConfiguration();break;case _s.xmtpTopicStore:s=qs.createConfiguration(e)}return s}(e,t);switch(s.type){case _s.none:return new Vs(s);case _s.xmtpTopicStore:return new qs(s)}}const{Compression:Ls}=a,Hs=104857600;class Fs{constructor(e,t,s,r){this.knownPublicKeyBundles=new Map,this.keystore=r,this.publicKeyBundle=e,this.address=e.walletSignatureAddress(),this._conversations=new yt(this),this._codecs=new Map,this._maxContentSize=Hs,this.apiClient=t,this._backupClient=s,this.contacts=new Ms(this)}get conversations(){return this._conversations}get backupType(){return this._backupClient.backupType}get signedPublicKeyBundle(){return ie.fromLegacyBundle(this.publicKeyBundle)}static async create(e,t){const s=ks(e),r=function(e){const t={privateKeyOverride:void 0,env:"dev",apiUrl:void 0,codecs:[new ye],maxContentSize:Hs,persistConversations:!0,skipContactPublishing:!1,useSnaps:!1,basePersistence:"undefined"!=typeof window&&void 0!==window.document?ut.create():lt.create(),disablePersistenceEncryption:!1,keystoreProviders:Xs(),apiClientFactory:Gs};return e?.codecs&&(e.codecs=t.codecs.concat(e.codecs)),e?.useSnaps&&(e.keystoreProviders=[new As("npm:@xmtp/snap","1.3.6"),...t.keystoreProviders]),{...t,...e}}(t),n=r.apiClientFactory(r),i=await async function(e,t,s){for(const r of e.keystoreProviders)try{return await r.newKeystore(e,t,s??void 0)}catch(e){if(e instanceof wt)continue;throw e}throw new Error("No keystore providers available")}(r,n,s),o=new oe(await i.getPublicKeyBundle()),a=o.walletSignatureAddress();n.setAuthenticator(new Je(i));const c=await Fs.setupBackupClient(a,r.env),d=new Fs(o,n,c,i);return await d.init(r),d}static async getKeys(e,t){const s=await Fs.create(ks(e),t),r=await s.keystore.getPrivateKeyBundle();return new Ge(r).encode()}static isSnapsReady(){return fs()}static async setupBackupClient(e,t){return Os(e,(async()=>Promise.resolve({type:"local"===t?_s.xmtpTopicStore:_s.none})))}async init(e){e.codecs.forEach((e=>{this.registerCodec(e)})),this._maxContentSize=e.maxContentSize,e.skipContactPublishing||await this.ensureUserContactPublished(e.publishLegacyContact)}async close(){}async ensureUserContactPublished(e=!1){const t=await $s(this.apiClient,this.address);t&&t instanceof ie&&this.signedPublicKeyBundle.equals(t)||(await this.publishUserContact(!0),e||await this.publishUserContact(e))}async publishUserContact(e=!1){const t=e?this.publicKeyBundle:this.signedPublicKeyBundle;await this.publishEnvelopes([{contentTopic:Ce(this.address),message:Rs(t)}])}async getUserContact(e){e=g(e);const t=this.knownPublicKeyBundles.get(e);if(t)return t;const s=await $s(this.apiClient,e);return s&&this.knownPublicKeyBundles.set(e,s),s}async getUserContacts(e){const t=e.map((e=>g(e))),s=new Map,r=[];for(const e of t){const t=this.knownPublicKeyBundles.get(e);t?s.set(e,t):(s.set(e,void 0),r.push(e))}const n=await js(this.apiClient,r);for(let e=0;e<n.length;e++){const t=r[e],i=n[e];s.set(t,i),i&&this.knownPublicKeyBundles.set(t,i)}return t.map((e=>s.get(e)))}forgetContact(e){e=g(e),this.knownPublicKeyBundles.delete(e)}async canMessage(e){try{if(Array.isArray(e)){return(await this.getUserContacts(e)).map((e=>!!e))}return void 0!==await this.getUserContact(e)}catch(e){return!1}}static async canMessage(e,t){const s=t?.apiUrl||st[t?.env||"dev"],r=new ct(s,{appVersion:t?.appVersion});if(Array.isArray(e)){const t=e.map((e=>g(e)));return(await js(r,t)).map((e=>!!e))}try{e=g(e)}catch(e){return!1}return void 0!==await $s(r,e)}validateEnvelope(e){const t=e.message;if(!e.contentTopic)throw new Error("Missing content topic");if(!t||!t.length)throw new Error("Cannot publish empty message")}async publishEnvelopes(e){for(const t of e)this.validateEnvelope(t);await this.apiClient.publish(e)}registerCodec(e){const t=e.contentType,s=`${t.authorityId}/${t.typeId}`;return this._codecs.set(s,e),this}codecFor(e){const t=`${e.authorityId}/${e.typeId}`,s=this._codecs.get(t);if(s&&!(e.versionMajor>s.contentType.versionMajor))return s}async encodeContent(e,t){const s=t?.contentType||de,r=this.codecFor(s);if(!r)throw new Error("unknown content type "+s);const n=r.encode(e,this),i=r.fallback(e);return i&&(n.fallback=i),"number"==typeof t?.compression&&n.content.length>=10&&(n.compression=t.compression),await async function(e){if(void 0===e.compression)return;const t={bytes:new Uint8Array(e.content.length/10)};await Cs(e.content).pipeThrough(new CompressionStream(Ss(e.compression))).pipeTo(Ps(t,e.content.length+1e3)),e.content=t.bytes}(n),{payload:a.EncodedContent.encode(n).finish(),shouldPush:r.shouldPush(e)}}async decodeContent(e){const t=a.EncodedContent.decode(e);if(!t.type)throw new Error("missing content type");let s;const r=new ae(t.type);let n;await async function(e,t){if(void 0===e.compression)return;const s={bytes:new Uint8Array(e.content.length)};await Cs(e.content).pipeThrough(new DecompressionStream(Ss(e.compression))).pipeTo(Ps(s,t)),e.content=s.bytes}(t,1e3);const i=this.codecFor(r);return i?s=i.decode(t,this):n=new Error("unknown content type "+r),{content:s,contentType:r,error:n,contentFallback:t.fallback}}listInvitations(e){return this.listEnvelopes(Be(this.address),(async e=>e),e)}async listEnvelopes(e,t,s){s||(s={});const{startTime:r,endTime:n,limit:i}=s,o=await this.apiClient.query({contentTopic:e,startTime:r,endTime:n},{direction:s.direction||d.SortDirection.SORT_DIRECTION_ASCENDING,limit:i}),a=[];for(const e of o)if(e.message)try{const s=await t(e);a.push(s)}catch(e){console.warn("Error in listEnvelopes mapper",e)}return a}listEnvelopesPaginated(e,t,s){return Qe(this.apiClient.queryIteratePages({contentTopic:e,startTime:s?.startTime,endTime:s?.endTime},{direction:s?.direction,pageSize:s?.pageSize||100}),t)}}function Gs(e){const t=e.apiUrl||st[e.env];return new ct(t,{appVersion:e.appVersion})}async function $s(e,t){const s=e.queryIterator({contentTopic:Ce(t)},{pageSize:5,direction:tt.SORT_DIRECTION_DESCENDING});for await(const e of s){if(!e.message)continue;const s=Is(e.message);let r;try{r=await(s?.walletSignatureAddress())}catch(e){r=void 0}if(r?.toLowerCase()===t.toLowerCase())return s}}async function js(e,t){const s=t.map(Ce),r=await e.batchQuery(s.map((e=>({contentTopic:e,pageSize:5,direction:tt.SORT_DIRECTION_DESCENDING}))));return Promise.all(t.map((async(e,t)=>{const s=r[t];if(s)for(const t of s)if(t.message)try{const s=Is(t.message),r=await(s?.walletSignatureAddress());if(e.toLowerCase()===r.toLowerCase())return s;console.info("Received contact bundle with incorrect address")}catch(e){console.info("Invalid contact bundle",e)}})))}function Xs(){return[new Ts,new os,new is]}const Js=new ae({authorityId:"xmtp.org",typeId:"composite",versionMajor:1,versionMinor:0});class zs{get contentType(){return Js}encode(e,t){const s=this.toProto(e,t);let r;r=s.composite?s.composite:{parts:[s]};const n=p.Composite.encode(r).finish();return{type:Js,parameters:{},content:n}}decode(e,t){return this.fromProto({composite:p.Composite.decode(e.content),part:void 0},t)}toProto(e,t){if("type"in e){const s=t.codecFor(e.type);if(!s)throw new Error(`missing codec for part type ${e.type}`);return{part:s.encode(e.content,t),composite:void 0}}const s=new Array;for(const r of e.parts)s.push(this.toProto(r,t));return{composite:{parts:s},part:void 0}}fromProto(e,t){if(e.part){if(!e.part.type)throw new Error("missing part content type");const s=new ae(e.part.type),r=t.codecFor(s);if(!r)throw new Error(`missing codec for part type ${s}`);return{type:s,content:r.decode(e.part,t)}}if(!e.composite)throw new Error("invalid composite");const s=new Array;for(const r of e.composite.parts)s.push(this.fromProto(r,t));return{parts:s}}fallback(e){}shouldPush(){return!1}}export{st as ApiUrls,Ze as AuthCache,ut as BrowserStoragePersistence,B as Ciphertext,Fs as Client,zs as CompositeCodec,Ls as Compression,Ns as ConsentListEntry,Js as ContentTypeComposite,ce as ContentTypeFallback,ae as ContentTypeId,de as ContentTypeText,De as ConversationV1,Me as ConversationV2,yt as Conversations,qe as DecodedMessage,Qt as EncryptedPersistence,ct as HttpApiClient,zt as InMemoryKeystore,lt as InMemoryPersistence,Mt as InvitationV1,is as KeyGeneratorKeystoreProvider,ft as LocalAuthenticator,Ve as MessageV1,Ue as MessageV2,os as NetworkKeystoreProvider,Zt as PrefixedPersistence,J as PrivateKey,Ge as PrivateKeyBundleV1,Fe as PrivateKeyBundleV2,ne as PublicKey,oe as PublicKeyBundle,Vt as SealedInvitation,Q as Signature,re as SignedPublicKey,ie as SignedPublicKeyBundle,As as SnapProvider,tt as SortDirection,Ts as StaticKeystoreProvider,pe as Stream,ye as TextCodec,Te as buildContentTopic,ke as buildDirectMessageTopic,Se as buildDirectMessageTopicV2,Ce as buildUserContactTopic,Pe as buildUserIntroTopic,Be as buildUserInviteTopic,Ie as buildUserPrivateStoreTopic,me as dateToNs,Is as decodeContactBundle,Le as decodeContent,_ as decrypt,Xs as defaultKeystoreProviders,M as encrypt,L as exportHmacKey,be as fromNanoString,q as generateHmacSignature,U as hkdfHmacKey,H as importHmacKey,bs as keystoreApiDefs,Qe as mapPaginatedStream,ge as nsToDate,We as retry,Es as snapKeystoreApiDefs,ve as toNanoString,O as verifyHmacSignature};
//# sourceMappingURL=index.js.map
