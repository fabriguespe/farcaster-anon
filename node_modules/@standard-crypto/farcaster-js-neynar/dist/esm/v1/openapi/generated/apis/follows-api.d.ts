/**
 * v1 Farcaster
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration.js';
import type { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { RequestArgs, BaseAPI } from '../base.js';
import { FollowResponse } from '../models';
/**
 * FollowsApi - axios parameter creator
 * @export
 */
export declare const FollowsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Gets a list of users who follow a given user in reverse chronological order.
     * @summary Gets all followers for a given FID
     * @param {number} fid FID of the user
     * @param {number} [viewerFid] fid of the user viewing this information, needed for contextual information.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    followers: (fid: number, viewerFid?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Gets a list of users who is following a given user in reverse chronological order.
     * @summary Gets all following users of a FID
     * @param {number} fid FID of the user
     * @param {number} [viewerFid] fid of the user viewing this information, needed for contextual information.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    following: (fid: number, viewerFid?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * FollowsApi - functional programming interface
 * @export
 */
export declare const FollowsApiFp: (configuration?: Configuration) => {
    /**
     * Gets a list of users who follow a given user in reverse chronological order.
     * @summary Gets all followers for a given FID
     * @param {number} fid FID of the user
     * @param {number} [viewerFid] fid of the user viewing this information, needed for contextual information.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    followers(fid: number, viewerFid?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FollowResponse>>;
    /**
     * Gets a list of users who is following a given user in reverse chronological order.
     * @summary Gets all following users of a FID
     * @param {number} fid FID of the user
     * @param {number} [viewerFid] fid of the user viewing this information, needed for contextual information.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    following(fid: number, viewerFid?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FollowResponse>>;
};
/**
 * FollowsApi - factory interface
 * @export
 */
export declare const FollowsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Gets a list of users who follow a given user in reverse chronological order.
     * @summary Gets all followers for a given FID
     * @param {FollowsApiFollowersRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    followers(requestParameters: FollowsApiFollowersRequest, options?: AxiosRequestConfig): AxiosPromise<FollowResponse>;
    /**
     * Gets a list of users who is following a given user in reverse chronological order.
     * @summary Gets all following users of a FID
     * @param {FollowsApiFollowingRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    following(requestParameters: FollowsApiFollowingRequest, options?: AxiosRequestConfig): AxiosPromise<FollowResponse>;
};
/**
 * Request parameters for followers operation in FollowsApi.
 * @export
 * @interface FollowsApiFollowersRequest
 */
export interface FollowsApiFollowersRequest {
    /**
     * FID of the user
     * @type {number}
     * @memberof FollowsApiFollowers
     */
    readonly fid: number;
    /**
     * fid of the user viewing this information, needed for contextual information.
     * @type {number}
     * @memberof FollowsApiFollowers
     */
    readonly viewerFid?: number;
}
/**
 * Request parameters for following operation in FollowsApi.
 * @export
 * @interface FollowsApiFollowingRequest
 */
export interface FollowsApiFollowingRequest {
    /**
     * FID of the user
     * @type {number}
     * @memberof FollowsApiFollowing
     */
    readonly fid: number;
    /**
     * fid of the user viewing this information, needed for contextual information.
     * @type {number}
     * @memberof FollowsApiFollowing
     */
    readonly viewerFid?: number;
}
/**
 * FollowsApi - object-oriented interface
 * @export
 * @class FollowsApi
 * @extends {BaseAPI}
 */
export declare class FollowsApi extends BaseAPI {
    /**
     * Gets a list of users who follow a given user in reverse chronological order.
     * @summary Gets all followers for a given FID
     * @param {FollowsApiFollowersRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FollowsApi
     */
    followers(requestParameters: FollowsApiFollowersRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<FollowResponse, any>>;
    /**
     * Gets a list of users who is following a given user in reverse chronological order.
     * @summary Gets all following users of a FID
     * @param {FollowsApiFollowingRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FollowsApi
     */
    following(requestParameters: FollowsApiFollowingRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<FollowResponse, any>>;
}
