/**
 * Farcaster API V2
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration.js';
import type { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { RequestArgs, BaseAPI } from '../base.js';
import { NotificationsResponse } from '../models';
/**
 * NotificationsApi - axios parameter creator
 * @export
 */
export declare const NotificationsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Returns a list of notifications for a specific FID.
     * @summary Retrieve notifications for a given user
     * @param {number} fid
     * @param {string} [cursor] Pagination cursor.
     * @param {number} [limit] Number of results to retrieve (default 25, max 50)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    notifications: (fid: number, cursor?: string, limit?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * NotificationsApi - functional programming interface
 * @export
 */
export declare const NotificationsApiFp: (configuration?: Configuration) => {
    /**
     * Returns a list of notifications for a specific FID.
     * @summary Retrieve notifications for a given user
     * @param {number} fid
     * @param {string} [cursor] Pagination cursor.
     * @param {number} [limit] Number of results to retrieve (default 25, max 50)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    notifications(fid: number, cursor?: string, limit?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<NotificationsResponse>>;
};
/**
 * NotificationsApi - factory interface
 * @export
 */
export declare const NotificationsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Returns a list of notifications for a specific FID.
     * @summary Retrieve notifications for a given user
     * @param {NotificationsApiNotificationsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    notifications(requestParameters: NotificationsApiNotificationsRequest, options?: AxiosRequestConfig): AxiosPromise<NotificationsResponse>;
};
/**
 * Request parameters for notifications operation in NotificationsApi.
 * @export
 * @interface NotificationsApiNotificationsRequest
 */
export interface NotificationsApiNotificationsRequest {
    /**
     *
     * @type {number}
     * @memberof NotificationsApiNotifications
     */
    readonly fid: number;
    /**
     * Pagination cursor.
     * @type {string}
     * @memberof NotificationsApiNotifications
     */
    readonly cursor?: string;
    /**
     * Number of results to retrieve (default 25, max 50)
     * @type {number}
     * @memberof NotificationsApiNotifications
     */
    readonly limit?: number;
}
/**
 * NotificationsApi - object-oriented interface
 * @export
 * @class NotificationsApi
 * @extends {BaseAPI}
 */
export declare class NotificationsApi extends BaseAPI {
    /**
     * Returns a list of notifications for a specific FID.
     * @summary Retrieve notifications for a given user
     * @param {NotificationsApiNotificationsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NotificationsApi
     */
    notifications(requestParameters: NotificationsApiNotificationsRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<NotificationsResponse, any>>;
}
