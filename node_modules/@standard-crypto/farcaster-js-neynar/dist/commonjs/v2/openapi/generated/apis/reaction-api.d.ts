/**
 * Farcaster API V2
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration.js';
import type { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import globalAxios from 'axios';
import { RequestArgs, BaseAPI } from '../base.js';
import { OperationResponse } from '../models';
import { ReactionReqBody } from '../models';
/**
 * ReactionApi - axios parameter creator
 * @export
 */
export declare const ReactionApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Delete a reaction (like or recast) to a given cast \\ (In order to delete a reaction `signer_uuid` must be approved)
     * @summary Delete a reaction
     * @param {ReactionReqBody} reactionReqBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteReaction: (reactionReqBody: ReactionReqBody, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Post a reaction (like or recast) to a given cast \\ (In order to post a reaction `signer_uuid` must be approved)
     * @summary Posts a reaction
     * @param {ReactionReqBody} reactionReqBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postReaction: (reactionReqBody: ReactionReqBody, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * ReactionApi - functional programming interface
 * @export
 */
export declare const ReactionApiFp: (configuration?: Configuration) => {
    /**
     * Delete a reaction (like or recast) to a given cast \\ (In order to delete a reaction `signer_uuid` must be approved)
     * @summary Delete a reaction
     * @param {ReactionReqBody} reactionReqBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteReaction(reactionReqBody: ReactionReqBody, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<OperationResponse>>;
    /**
     * Post a reaction (like or recast) to a given cast \\ (In order to post a reaction `signer_uuid` must be approved)
     * @summary Posts a reaction
     * @param {ReactionReqBody} reactionReqBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postReaction(reactionReqBody: ReactionReqBody, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<OperationResponse>>;
};
/**
 * ReactionApi - factory interface
 * @export
 */
export declare const ReactionApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Delete a reaction (like or recast) to a given cast \\ (In order to delete a reaction `signer_uuid` must be approved)
     * @summary Delete a reaction
     * @param {ReactionApiDeleteReactionRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteReaction(requestParameters: ReactionApiDeleteReactionRequest, options?: AxiosRequestConfig): AxiosPromise<OperationResponse>;
    /**
     * Post a reaction (like or recast) to a given cast \\ (In order to post a reaction `signer_uuid` must be approved)
     * @summary Posts a reaction
     * @param {ReactionApiPostReactionRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postReaction(requestParameters: ReactionApiPostReactionRequest, options?: AxiosRequestConfig): AxiosPromise<OperationResponse>;
};
/**
 * Request parameters for deleteReaction operation in ReactionApi.
 * @export
 * @interface ReactionApiDeleteReactionRequest
 */
export interface ReactionApiDeleteReactionRequest {
    /**
     *
     * @type {ReactionReqBody}
     * @memberof ReactionApiDeleteReaction
     */
    readonly reactionReqBody: ReactionReqBody;
}
/**
 * Request parameters for postReaction operation in ReactionApi.
 * @export
 * @interface ReactionApiPostReactionRequest
 */
export interface ReactionApiPostReactionRequest {
    /**
     *
     * @type {ReactionReqBody}
     * @memberof ReactionApiPostReaction
     */
    readonly reactionReqBody: ReactionReqBody;
}
/**
 * ReactionApi - object-oriented interface
 * @export
 * @class ReactionApi
 * @extends {BaseAPI}
 */
export declare class ReactionApi extends BaseAPI {
    /**
     * Delete a reaction (like or recast) to a given cast \\ (In order to delete a reaction `signer_uuid` must be approved)
     * @summary Delete a reaction
     * @param {ReactionApiDeleteReactionRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ReactionApi
     */
    deleteReaction(requestParameters: ReactionApiDeleteReactionRequest, options?: AxiosRequestConfig): Promise<globalAxios.AxiosResponse<OperationResponse, any>>;
    /**
     * Post a reaction (like or recast) to a given cast \\ (In order to post a reaction `signer_uuid` must be approved)
     * @summary Posts a reaction
     * @param {ReactionApiPostReactionRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ReactionApi
     */
    postReaction(requestParameters: ReactionApiPostReactionRequest, options?: AxiosRequestConfig): Promise<globalAxios.AxiosResponse<OperationResponse, any>>;
}
