/**
 * v1 Farcaster
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration.js';
import type { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import globalAxios from 'axios';
import { RequestArgs, BaseAPI } from '../base.js';
import { CastLikesResponse } from '../models';
import { CastReactionsResponse } from '../models';
import { CastRecasterResponse } from '../models';
/**
 * ReactionsApi - axios parameter creator
 * @export
 */
export declare const ReactionsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Get all like reactions for a specific cast in reverse chronological order.
     * @summary Get all like reactions for a specific cast
     * @param {string} castHash Cast hash
     * @param {number} [viewerFid] fid of the user viewing this information, needed for contextual information.
     * @param {string} [cursor] Pagination cursor.
     * @param {number} [limit] Number of results to retrieve (default 25, max 150)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    castLikes: (castHash: string, viewerFid?: number, cursor?: string, limit?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get all reactions (likes and recasts) for a specific cast.
     * @summary Get all reactions for a specific cast
     * @param {string} castHash Cast hash
     * @param {number} [viewerFid] fid of the user viewing this information, needed for contextual information.
     * @param {string} [cursor] Pagination cursor.
     * @param {number} [limit] Number of results to retrieve (default 25, max 150)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    castReactions: (castHash: string, viewerFid?: number, cursor?: string, limit?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get all recasters for a specific cast.
     * @summary Get all recasters for a specific cast
     * @param {string} castHash Cast hash
     * @param {number} [viewerFid] fid of the user viewing this information, needed for contextual information.
     * @param {string} [cursor] Pagination cursor.
     * @param {number} [limit] Number of results to retrieve (default 25, max 150)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    castRecasters: (castHash: string, viewerFid?: number, cursor?: string, limit?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * ReactionsApi - functional programming interface
 * @export
 */
export declare const ReactionsApiFp: (configuration?: Configuration) => {
    /**
     * Get all like reactions for a specific cast in reverse chronological order.
     * @summary Get all like reactions for a specific cast
     * @param {string} castHash Cast hash
     * @param {number} [viewerFid] fid of the user viewing this information, needed for contextual information.
     * @param {string} [cursor] Pagination cursor.
     * @param {number} [limit] Number of results to retrieve (default 25, max 150)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    castLikes(castHash: string, viewerFid?: number, cursor?: string, limit?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CastLikesResponse>>;
    /**
     * Get all reactions (likes and recasts) for a specific cast.
     * @summary Get all reactions for a specific cast
     * @param {string} castHash Cast hash
     * @param {number} [viewerFid] fid of the user viewing this information, needed for contextual information.
     * @param {string} [cursor] Pagination cursor.
     * @param {number} [limit] Number of results to retrieve (default 25, max 150)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    castReactions(castHash: string, viewerFid?: number, cursor?: string, limit?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CastReactionsResponse>>;
    /**
     * Get all recasters for a specific cast.
     * @summary Get all recasters for a specific cast
     * @param {string} castHash Cast hash
     * @param {number} [viewerFid] fid of the user viewing this information, needed for contextual information.
     * @param {string} [cursor] Pagination cursor.
     * @param {number} [limit] Number of results to retrieve (default 25, max 150)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    castRecasters(castHash: string, viewerFid?: number, cursor?: string, limit?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CastRecasterResponse>>;
};
/**
 * ReactionsApi - factory interface
 * @export
 */
export declare const ReactionsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Get all like reactions for a specific cast in reverse chronological order.
     * @summary Get all like reactions for a specific cast
     * @param {ReactionsApiCastLikesRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    castLikes(requestParameters: ReactionsApiCastLikesRequest, options?: AxiosRequestConfig): AxiosPromise<CastLikesResponse>;
    /**
     * Get all reactions (likes and recasts) for a specific cast.
     * @summary Get all reactions for a specific cast
     * @param {ReactionsApiCastReactionsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    castReactions(requestParameters: ReactionsApiCastReactionsRequest, options?: AxiosRequestConfig): AxiosPromise<CastReactionsResponse>;
    /**
     * Get all recasters for a specific cast.
     * @summary Get all recasters for a specific cast
     * @param {ReactionsApiCastRecastersRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    castRecasters(requestParameters: ReactionsApiCastRecastersRequest, options?: AxiosRequestConfig): AxiosPromise<CastRecasterResponse>;
};
/**
 * Request parameters for castLikes operation in ReactionsApi.
 * @export
 * @interface ReactionsApiCastLikesRequest
 */
export interface ReactionsApiCastLikesRequest {
    /**
     * Cast hash
     * @type {string}
     * @memberof ReactionsApiCastLikes
     */
    readonly castHash: string;
    /**
     * fid of the user viewing this information, needed for contextual information.
     * @type {number}
     * @memberof ReactionsApiCastLikes
     */
    readonly viewerFid?: number;
    /**
     * Pagination cursor.
     * @type {string}
     * @memberof ReactionsApiCastLikes
     */
    readonly cursor?: string;
    /**
     * Number of results to retrieve (default 25, max 150)
     * @type {number}
     * @memberof ReactionsApiCastLikes
     */
    readonly limit?: number;
}
/**
 * Request parameters for castReactions operation in ReactionsApi.
 * @export
 * @interface ReactionsApiCastReactionsRequest
 */
export interface ReactionsApiCastReactionsRequest {
    /**
     * Cast hash
     * @type {string}
     * @memberof ReactionsApiCastReactions
     */
    readonly castHash: string;
    /**
     * fid of the user viewing this information, needed for contextual information.
     * @type {number}
     * @memberof ReactionsApiCastReactions
     */
    readonly viewerFid?: number;
    /**
     * Pagination cursor.
     * @type {string}
     * @memberof ReactionsApiCastReactions
     */
    readonly cursor?: string;
    /**
     * Number of results to retrieve (default 25, max 150)
     * @type {number}
     * @memberof ReactionsApiCastReactions
     */
    readonly limit?: number;
}
/**
 * Request parameters for castRecasters operation in ReactionsApi.
 * @export
 * @interface ReactionsApiCastRecastersRequest
 */
export interface ReactionsApiCastRecastersRequest {
    /**
     * Cast hash
     * @type {string}
     * @memberof ReactionsApiCastRecasters
     */
    readonly castHash: string;
    /**
     * fid of the user viewing this information, needed for contextual information.
     * @type {number}
     * @memberof ReactionsApiCastRecasters
     */
    readonly viewerFid?: number;
    /**
     * Pagination cursor.
     * @type {string}
     * @memberof ReactionsApiCastRecasters
     */
    readonly cursor?: string;
    /**
     * Number of results to retrieve (default 25, max 150)
     * @type {number}
     * @memberof ReactionsApiCastRecasters
     */
    readonly limit?: number;
}
/**
 * ReactionsApi - object-oriented interface
 * @export
 * @class ReactionsApi
 * @extends {BaseAPI}
 */
export declare class ReactionsApi extends BaseAPI {
    /**
     * Get all like reactions for a specific cast in reverse chronological order.
     * @summary Get all like reactions for a specific cast
     * @param {ReactionsApiCastLikesRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ReactionsApi
     */
    castLikes(requestParameters: ReactionsApiCastLikesRequest, options?: AxiosRequestConfig): Promise<globalAxios.AxiosResponse<CastLikesResponse, any>>;
    /**
     * Get all reactions (likes and recasts) for a specific cast.
     * @summary Get all reactions for a specific cast
     * @param {ReactionsApiCastReactionsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ReactionsApi
     */
    castReactions(requestParameters: ReactionsApiCastReactionsRequest, options?: AxiosRequestConfig): Promise<globalAxios.AxiosResponse<CastReactionsResponse, any>>;
    /**
     * Get all recasters for a specific cast.
     * @summary Get all recasters for a specific cast
     * @param {ReactionsApiCastRecastersRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ReactionsApi
     */
    castRecasters(requestParameters: ReactionsApiCastRecastersRequest, options?: AxiosRequestConfig): Promise<globalAxios.AxiosResponse<CastRecasterResponse, any>>;
}
