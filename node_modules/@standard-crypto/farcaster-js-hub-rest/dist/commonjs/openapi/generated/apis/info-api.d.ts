/**
 * Farcaster Hub REST API
 * Perform basic queries of Farcaster state via the REST API of a Farcaster hub. See the [Farcaster docs](https://www.thehubble.xyz/docs/httpapi/httpapi.html) for more details. Some client libraries:   - [TypeScript](https://www.npmjs.com/package/@standard-crypto/farcaster-js-hub-rest)
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration.js';
import type { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import globalAxios from 'axios';
import { RequestArgs, BaseAPI } from '../base.js';
import { HubInfoResponse } from '../models/index.js';
/**
 * InfoApi - axios parameter creator
 * @export
 */
export declare const InfoApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary Sync Methods
     * @param {boolean} dbstats Whether to return DB stats
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getInfo: (dbstats: boolean, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * InfoApi - functional programming interface
 * @export
 */
export declare const InfoApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary Sync Methods
     * @param {boolean} dbstats Whether to return DB stats
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getInfo(dbstats: boolean, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<HubInfoResponse>>;
};
/**
 * InfoApi - factory interface
 * @export
 */
export declare const InfoApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary Sync Methods
     * @param {InfoApiGetInfoRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getInfo(requestParameters: InfoApiGetInfoRequest, options?: AxiosRequestConfig): AxiosPromise<HubInfoResponse>;
};
/**
 * Request parameters for getInfo operation in InfoApi.
 * @export
 * @interface InfoApiGetInfoRequest
 */
export interface InfoApiGetInfoRequest {
    /**
     * Whether to return DB stats
     * @type {boolean}
     * @memberof InfoApiGetInfo
     */
    readonly dbstats: boolean;
}
/**
 * InfoApi - object-oriented interface
 * @export
 * @class InfoApi
 * @extends {BaseAPI}
 */
export declare class InfoApi extends BaseAPI {
    /**
     *
     * @summary Sync Methods
     * @param {InfoApiGetInfoRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InfoApi
     */
    getInfo(requestParameters: InfoApiGetInfoRequest, options?: AxiosRequestConfig): Promise<globalAxios.AxiosResponse<HubInfoResponse, any>>;
}
