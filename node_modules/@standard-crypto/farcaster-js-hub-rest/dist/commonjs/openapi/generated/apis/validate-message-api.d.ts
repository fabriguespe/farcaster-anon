/**
 * Farcaster Hub REST API
 * Perform basic queries of Farcaster state via the REST API of a Farcaster hub. See the [Farcaster docs](https://www.thehubble.xyz/docs/httpapi/httpapi.html) for more details. Some client libraries:   - [TypeScript](https://www.npmjs.com/package/@standard-crypto/farcaster-js-hub-rest)
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/// <reference types="node" />
import type { Configuration } from '../configuration.js';
import type { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import globalAxios from 'axios';
import { RequestArgs, BaseAPI } from '../base.js';
import { ValidateMessageResponse } from '../models/index.js';
/**
 * ValidateMessageApi - axios parameter creator
 * @export
 */
export declare const ValidateMessageApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary Validate a signed protobuf-serialized message with the Hub
     * @param {Buffer} body *  A Message is a delta operation on the Farcaster network. The message protobuf is an envelope  that wraps a MessageData object and contains a hash and signature which can verify its authenticity.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    validateMessage: (body: Buffer, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * ValidateMessageApi - functional programming interface
 * @export
 */
export declare const ValidateMessageApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary Validate a signed protobuf-serialized message with the Hub
     * @param {Buffer} body *  A Message is a delta operation on the Farcaster network. The message protobuf is an envelope  that wraps a MessageData object and contains a hash and signature which can verify its authenticity.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    validateMessage(body: Buffer, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ValidateMessageResponse>>;
};
/**
 * ValidateMessageApi - factory interface
 * @export
 */
export declare const ValidateMessageApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary Validate a signed protobuf-serialized message with the Hub
     * @param {ValidateMessageApiValidateMessageRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    validateMessage(requestParameters: ValidateMessageApiValidateMessageRequest, options?: AxiosRequestConfig): AxiosPromise<ValidateMessageResponse>;
};
/**
 * Request parameters for validateMessage operation in ValidateMessageApi.
 * @export
 * @interface ValidateMessageApiValidateMessageRequest
 */
export interface ValidateMessageApiValidateMessageRequest {
    /**
     * *  A Message is a delta operation on the Farcaster network. The message protobuf is an envelope  that wraps a MessageData object and contains a hash and signature which can verify its authenticity.
     * @type {Buffer}
     * @memberof ValidateMessageApiValidateMessage
     */
    readonly body: Buffer;
}
/**
 * ValidateMessageApi - object-oriented interface
 * @export
 * @class ValidateMessageApi
 * @extends {BaseAPI}
 */
export declare class ValidateMessageApi extends BaseAPI {
    /**
     *
     * @summary Validate a signed protobuf-serialized message with the Hub
     * @param {ValidateMessageApiValidateMessageRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ValidateMessageApi
     */
    validateMessage(requestParameters: ValidateMessageApiValidateMessageRequest, options?: AxiosRequestConfig): Promise<globalAxios.AxiosResponse<ValidateMessageResponse, any>>;
}
