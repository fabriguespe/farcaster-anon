/**
 * Farcaster Hub REST API
 * Perform basic queries of Farcaster state via the REST API of a Farcaster hub. See the [Farcaster docs](https://www.thehubble.xyz/docs/httpapi/httpapi.html) for more details. Some client libraries:   - [TypeScript](https://www.npmjs.com/package/@standard-crypto/farcaster-js-hub-rest)
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration.js';
import type { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { RequestArgs, BaseAPI } from '../base.js';
import { LinkAdd } from '../models/index.js';
import { LinkType } from '../models/index.js';
import { ListLinksByFid200Response } from '../models/index.js';
/**
 * LinksApi - axios parameter creator
 * @export
 */
export declare const LinksApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary Get a link by its FID and target FID.
     * @param {number} fid The FID of the link\&#39;s originator
     * @param {number} targetFid The FID of the target of the link
     * @param {LinkType} linkType The type of link, as a string value
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLinkById: (fid: number, targetFid: number, linkType: LinkType, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Get all links from a source FID
     * @param {number} fid The FID of the link\&#39;s originator
     * @param {LinkType} [linkType] The type of link, as a string value
     * @param {number} [pageSize] Maximum number of messages to return in a single response
     * @param {boolean} [reverse] Reverse the sort order, returning latest messages first
     * @param {string} [pageToken] The page token returned by the previous query, to fetch the next page. If this parameter is empty, fetch the first page
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listLinksByFid: (fid: number, linkType?: LinkType, pageSize?: number, reverse?: boolean, pageToken?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Get all links to a target FID
     * @param {number} targetFid The FID of the target of the link
     * @param {LinkType} [linkType] The type of link, as a string value
     * @param {number} [pageSize] Maximum number of messages to return in a single response
     * @param {boolean} [reverse] Reverse the sort order, returning latest messages first
     * @param {string} [pageToken] The page token returned by the previous query, to fetch the next page. If this parameter is empty, fetch the first page
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listLinksByTargetFid: (targetFid: number, linkType?: LinkType, pageSize?: number, reverse?: boolean, pageToken?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * LinksApi - functional programming interface
 * @export
 */
export declare const LinksApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary Get a link by its FID and target FID.
     * @param {number} fid The FID of the link\&#39;s originator
     * @param {number} targetFid The FID of the target of the link
     * @param {LinkType} linkType The type of link, as a string value
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLinkById(fid: number, targetFid: number, linkType: LinkType, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<LinkAdd>>;
    /**
     *
     * @summary Get all links from a source FID
     * @param {number} fid The FID of the link\&#39;s originator
     * @param {LinkType} [linkType] The type of link, as a string value
     * @param {number} [pageSize] Maximum number of messages to return in a single response
     * @param {boolean} [reverse] Reverse the sort order, returning latest messages first
     * @param {string} [pageToken] The page token returned by the previous query, to fetch the next page. If this parameter is empty, fetch the first page
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listLinksByFid(fid: number, linkType?: LinkType, pageSize?: number, reverse?: boolean, pageToken?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ListLinksByFid200Response>>;
    /**
     *
     * @summary Get all links to a target FID
     * @param {number} targetFid The FID of the target of the link
     * @param {LinkType} [linkType] The type of link, as a string value
     * @param {number} [pageSize] Maximum number of messages to return in a single response
     * @param {boolean} [reverse] Reverse the sort order, returning latest messages first
     * @param {string} [pageToken] The page token returned by the previous query, to fetch the next page. If this parameter is empty, fetch the first page
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listLinksByTargetFid(targetFid: number, linkType?: LinkType, pageSize?: number, reverse?: boolean, pageToken?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ListLinksByFid200Response>>;
};
/**
 * LinksApi - factory interface
 * @export
 */
export declare const LinksApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary Get a link by its FID and target FID.
     * @param {LinksApiGetLinkByIdRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLinkById(requestParameters: LinksApiGetLinkByIdRequest, options?: AxiosRequestConfig): AxiosPromise<LinkAdd>;
    /**
     *
     * @summary Get all links from a source FID
     * @param {LinksApiListLinksByFidRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listLinksByFid(requestParameters: LinksApiListLinksByFidRequest, options?: AxiosRequestConfig): AxiosPromise<ListLinksByFid200Response>;
    /**
     *
     * @summary Get all links to a target FID
     * @param {LinksApiListLinksByTargetFidRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listLinksByTargetFid(requestParameters: LinksApiListLinksByTargetFidRequest, options?: AxiosRequestConfig): AxiosPromise<ListLinksByFid200Response>;
};
/**
 * Request parameters for getLinkById operation in LinksApi.
 * @export
 * @interface LinksApiGetLinkByIdRequest
 */
export interface LinksApiGetLinkByIdRequest {
    /**
     * The FID of the link\&#39;s originator
     * @type {number}
     * @memberof LinksApiGetLinkById
     */
    readonly fid: number;
    /**
     * The FID of the target of the link
     * @type {number}
     * @memberof LinksApiGetLinkById
     */
    readonly targetFid: number;
    /**
     * The type of link, as a string value
     * @type {LinkType}
     * @memberof LinksApiGetLinkById
     */
    readonly linkType: LinkType;
}
/**
 * Request parameters for listLinksByFid operation in LinksApi.
 * @export
 * @interface LinksApiListLinksByFidRequest
 */
export interface LinksApiListLinksByFidRequest {
    /**
     * The FID of the link\&#39;s originator
     * @type {number}
     * @memberof LinksApiListLinksByFid
     */
    readonly fid: number;
    /**
     * The type of link, as a string value
     * @type {LinkType}
     * @memberof LinksApiListLinksByFid
     */
    readonly linkType?: LinkType;
    /**
     * Maximum number of messages to return in a single response
     * @type {number}
     * @memberof LinksApiListLinksByFid
     */
    readonly pageSize?: number;
    /**
     * Reverse the sort order, returning latest messages first
     * @type {boolean}
     * @memberof LinksApiListLinksByFid
     */
    readonly reverse?: boolean;
    /**
     * The page token returned by the previous query, to fetch the next page. If this parameter is empty, fetch the first page
     * @type {string}
     * @memberof LinksApiListLinksByFid
     */
    readonly pageToken?: string;
}
/**
 * Request parameters for listLinksByTargetFid operation in LinksApi.
 * @export
 * @interface LinksApiListLinksByTargetFidRequest
 */
export interface LinksApiListLinksByTargetFidRequest {
    /**
     * The FID of the target of the link
     * @type {number}
     * @memberof LinksApiListLinksByTargetFid
     */
    readonly targetFid: number;
    /**
     * The type of link, as a string value
     * @type {LinkType}
     * @memberof LinksApiListLinksByTargetFid
     */
    readonly linkType?: LinkType;
    /**
     * Maximum number of messages to return in a single response
     * @type {number}
     * @memberof LinksApiListLinksByTargetFid
     */
    readonly pageSize?: number;
    /**
     * Reverse the sort order, returning latest messages first
     * @type {boolean}
     * @memberof LinksApiListLinksByTargetFid
     */
    readonly reverse?: boolean;
    /**
     * The page token returned by the previous query, to fetch the next page. If this parameter is empty, fetch the first page
     * @type {string}
     * @memberof LinksApiListLinksByTargetFid
     */
    readonly pageToken?: string;
}
/**
 * LinksApi - object-oriented interface
 * @export
 * @class LinksApi
 * @extends {BaseAPI}
 */
export declare class LinksApi extends BaseAPI {
    /**
     *
     * @summary Get a link by its FID and target FID.
     * @param {LinksApiGetLinkByIdRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LinksApi
     */
    getLinkById(requestParameters: LinksApiGetLinkByIdRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<LinkAdd, any>>;
    /**
     *
     * @summary Get all links from a source FID
     * @param {LinksApiListLinksByFidRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LinksApi
     */
    listLinksByFid(requestParameters: LinksApiListLinksByFidRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ListLinksByFid200Response, any>>;
    /**
     *
     * @summary Get all links to a target FID
     * @param {LinksApiListLinksByTargetFidRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LinksApi
     */
    listLinksByTargetFid(requestParameters: LinksApiListLinksByTargetFidRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ListLinksByFid200Response, any>>;
}
